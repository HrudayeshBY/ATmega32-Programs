
spi_nor_flash_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000c1a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000c0  00800060  00000c1a  00000c8e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      0000005c  00000000  00000000  00000d4e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000dac  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000098  00000000  00000000  00000de8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000010ba  00000000  00000000  00000e80  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006f5  00000000  00000000  00001f3a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000686  00000000  00000000  0000262f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001e8  00000000  00000000  00002cb8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003fc  00000000  00000000  00002ea0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000a0b  00000000  00000000  0000329c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000088  00000000  00000000  00003ca7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	11 e0       	ldi	r17, 0x01	; 1
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e1       	ldi	r30, 0x1A	; 26
  68:	fc e0       	ldi	r31, 0x0C	; 12
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 32       	cpi	r26, 0x20	; 32
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 cc 02 	call	0x598	; 0x598 <main>
  7a:	0c 94 0b 06 	jmp	0xc16	; 0xc16 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <uart_init>:
#define READ_DATA_CMD 0x03
#define PAGE_PROG_CMD 0x02

void uart_init()
{
	DDRD |= (1<<PD1); //Tx pin
  82:	81 b3       	in	r24, 0x11	; 17
  84:	82 60       	ori	r24, 0x02	; 2
  86:	81 bb       	out	0x11, r24	; 17
	DDRD &= ~(1<<PD0); //Rx pin
  88:	81 b3       	in	r24, 0x11	; 17
  8a:	8e 7f       	andi	r24, 0xFE	; 254
  8c:	81 bb       	out	0x11, r24	; 17
	UCSRA &= ~(UCSRA);
  8e:	8b b1       	in	r24, 0x0b	; 11
  90:	90 e0       	ldi	r25, 0x00	; 0
  92:	80 95       	com	r24
  94:	90 95       	com	r25
  96:	9b b1       	in	r25, 0x0b	; 11
  98:	89 23       	and	r24, r25
  9a:	8b b9       	out	0x0b, r24	; 11
	UCSRB |= (1<<RXEN) | (1<<TXEN);
  9c:	8a b1       	in	r24, 0x0a	; 10
  9e:	88 61       	ori	r24, 0x18	; 24
  a0:	8a b9       	out	0x0a, r24	; 10
	UCSRC |= (1<<URSEL) |(1<<UCSZ1) |(1<<UCSZ0);
  a2:	80 b5       	in	r24, 0x20	; 32
  a4:	86 68       	ori	r24, 0x86	; 134
  a6:	80 bd       	out	0x20, r24	; 32
	UBRRH &= ~(UBRRH);
  a8:	80 b5       	in	r24, 0x20	; 32
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	80 95       	com	r24
  ae:	90 95       	com	r25
  b0:	90 b5       	in	r25, 0x20	; 32
  b2:	89 23       	and	r24, r25
  b4:	80 bd       	out	0x20, r24	; 32
	UBRRL = 0x33;
  b6:	83 e3       	ldi	r24, 0x33	; 51
  b8:	89 b9       	out	0x09, r24	; 9
  ba:	08 95       	ret

000000bc <uart_transmit>:
}

void uart_transmit(char data)
{
	UDR = data;
  bc:	8c b9       	out	0x0c, r24	; 12
	while(!(UCSRA & (1<<TXC)))
  be:	5e 9b       	sbis	0x0b, 6	; 11
  c0:	fe cf       	rjmp	.-4      	; 0xbe <uart_transmit+0x2>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c2:	8f e1       	ldi	r24, 0x1F	; 31
  c4:	9e e4       	ldi	r25, 0x4E	; 78
  c6:	01 97       	sbiw	r24, 0x01	; 1
  c8:	f1 f7       	brne	.-4      	; 0xc6 <uart_transmit+0xa>
  ca:	00 c0       	rjmp	.+0      	; 0xcc <uart_transmit+0x10>
  cc:	00 00       	nop
  ce:	08 95       	ret

000000d0 <uart_print>:
	}
	_delay_ms(10);
}

void uart_print(char* str)
{
  d0:	0f 93       	push	r16
  d2:	1f 93       	push	r17
  d4:	cf 93       	push	r28
  d6:	df 93       	push	r29
  d8:	8c 01       	movw	r16, r24
	int n = 0;
  da:	c0 e0       	ldi	r28, 0x00	; 0
  dc:	d0 e0       	ldi	r29, 0x00	; 0
	while((str[n] != '\0'))
  de:	03 c0       	rjmp	.+6      	; 0xe6 <uart_print+0x16>
	{
		uart_transmit(str[n]);
  e0:	0e 94 5e 00 	call	0xbc	; 0xbc <uart_transmit>
		n++;
  e4:	21 96       	adiw	r28, 0x01	; 1
}

void uart_print(char* str)
{
	int n = 0;
	while((str[n] != '\0'))
  e6:	f8 01       	movw	r30, r16
  e8:	ec 0f       	add	r30, r28
  ea:	fd 1f       	adc	r31, r29
  ec:	80 81       	ld	r24, Z
  ee:	81 11       	cpse	r24, r1
  f0:	f7 cf       	rjmp	.-18     	; 0xe0 <uart_print+0x10>
	{
		uart_transmit(str[n]);
		n++;
	}
	uart_transmit('\n');
  f2:	8a e0       	ldi	r24, 0x0A	; 10
  f4:	0e 94 5e 00 	call	0xbc	; 0xbc <uart_transmit>
	uart_transmit('\r');
  f8:	8d e0       	ldi	r24, 0x0D	; 13
  fa:	0e 94 5e 00 	call	0xbc	; 0xbc <uart_transmit>
}
  fe:	df 91       	pop	r29
 100:	cf 91       	pop	r28
 102:	1f 91       	pop	r17
 104:	0f 91       	pop	r16
 106:	08 95       	ret

00000108 <SPI_init>:
void SPI_init()
{
	DDRB |= (1<<PB7) | (1<<PB5) | (1<<PB4);
 108:	87 b3       	in	r24, 0x17	; 23
 10a:	80 6b       	ori	r24, 0xB0	; 176
 10c:	87 bb       	out	0x17, r24	; 23
	CS_OFF;
 10e:	88 b3       	in	r24, 0x18	; 24
 110:	80 61       	ori	r24, 0x10	; 16
 112:	88 bb       	out	0x18, r24	; 24
	SPCR |= (1<<SPE) | (1<<MSTR); //fosc/4 is the SPI clock frequency
 114:	8d b1       	in	r24, 0x0d	; 13
 116:	80 65       	ori	r24, 0x50	; 80
 118:	8d b9       	out	0x0d, r24	; 13
	SPSR &= ~(1<<SPI2X);
 11a:	8e b1       	in	r24, 0x0e	; 14
 11c:	8e 7f       	andi	r24, 0xFE	; 254
 11e:	8e b9       	out	0x0e, r24	; 14
 120:	08 95       	ret

00000122 <SPI_master_tx>:
}

void SPI_master_tx(char data)
{

	SPDR = data;
 122:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF)))
 124:	77 9b       	sbis	0x0e, 7	; 14
 126:	fe cf       	rjmp	.-4      	; 0x124 <SPI_master_tx+0x2>
	{
		//wait
	}

}
 128:	08 95       	ret

0000012a <SPI_master_rx>:

char SPI_master_rx(char dummy)
{
	SPDR = dummy;
 12a:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF)))
 12c:	77 9b       	sbis	0x0e, 7	; 14
 12e:	fe cf       	rjmp	.-4      	; 0x12c <SPI_master_rx+0x2>
	{
		//wait
	}
	return SPDR;
 130:	8f b1       	in	r24, 0x0f	; 15
	
}
 132:	08 95       	ret

00000134 <getID>:
void getID()
{
 134:	0f 93       	push	r16
 136:	1f 93       	push	r17
 138:	cf 93       	push	r28
 13a:	df 93       	push	r29
 13c:	cd b7       	in	r28, 0x3d	; 61
 13e:	de b7       	in	r29, 0x3e	; 62
 140:	ec 97       	sbiw	r28, 0x3c	; 60
 142:	0f b6       	in	r0, 0x3f	; 63
 144:	f8 94       	cli
 146:	de bf       	out	0x3e, r29	; 62
 148:	0f be       	out	0x3f, r0	; 63
 14a:	cd bf       	out	0x3d, r28	; 61
	char info[60];
	CS_ON;
 14c:	88 b3       	in	r24, 0x18	; 24
 14e:	8f 7e       	andi	r24, 0xEF	; 239
 150:	88 bb       	out	0x18, r24	; 24
 152:	2f ef       	ldi	r18, 0xFF	; 255
 154:	80 e7       	ldi	r24, 0x70	; 112
 156:	92 e0       	ldi	r25, 0x02	; 2
 158:	21 50       	subi	r18, 0x01	; 1
 15a:	80 40       	sbci	r24, 0x00	; 0
 15c:	90 40       	sbci	r25, 0x00	; 0
 15e:	e1 f7       	brne	.-8      	; 0x158 <getID+0x24>
 160:	00 c0       	rjmp	.+0      	; 0x162 <getID+0x2e>
 162:	00 00       	nop
	_delay_ms(100);
	SPI_master_tx(JDECID);
 164:	8f e9       	ldi	r24, 0x9F	; 159
 166:	0e 94 91 00 	call	0x122	; 0x122 <SPI_master_tx>
	char id[3];
	id[0] = SPI_master_rx(0x00);
 16a:	80 e0       	ldi	r24, 0x00	; 0
 16c:	0e 94 95 00 	call	0x12a	; 0x12a <SPI_master_rx>
 170:	18 2f       	mov	r17, r24
	id[1] = SPI_master_rx(0x00);
 172:	80 e0       	ldi	r24, 0x00	; 0
 174:	0e 94 95 00 	call	0x12a	; 0x12a <SPI_master_rx>
 178:	08 2f       	mov	r16, r24
	id[2] = SPI_master_rx(0x00);
 17a:	80 e0       	ldi	r24, 0x00	; 0
 17c:	0e 94 95 00 	call	0x12a	; 0x12a <SPI_master_rx>
	CS_OFF;
 180:	98 b3       	in	r25, 0x18	; 24
 182:	90 61       	ori	r25, 0x10	; 16
 184:	98 bb       	out	0x18, r25	; 24
	sprintf(info,"Manufacture ID: 0x%02X, Device ID: 0x%02X%02X",id[0],id[1],id[2]);
 186:	1f 92       	push	r1
 188:	8f 93       	push	r24
 18a:	1f 92       	push	r1
 18c:	0f 93       	push	r16
 18e:	1f 92       	push	r1
 190:	1f 93       	push	r17
 192:	80 e6       	ldi	r24, 0x60	; 96
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	9f 93       	push	r25
 198:	8f 93       	push	r24
 19a:	8e 01       	movw	r16, r28
 19c:	0f 5f       	subi	r16, 0xFF	; 255
 19e:	1f 4f       	sbci	r17, 0xFF	; 255
 1a0:	1f 93       	push	r17
 1a2:	0f 93       	push	r16
 1a4:	0e 94 21 03 	call	0x642	; 0x642 <sprintf>
	uart_print(info);
 1a8:	c8 01       	movw	r24, r16
 1aa:	0e 94 68 00 	call	0xd0	; 0xd0 <uart_print>
	
}
 1ae:	0f b6       	in	r0, 0x3f	; 63
 1b0:	f8 94       	cli
 1b2:	de bf       	out	0x3e, r29	; 62
 1b4:	0f be       	out	0x3f, r0	; 63
 1b6:	cd bf       	out	0x3d, r28	; 61
 1b8:	ec 96       	adiw	r28, 0x3c	; 60
 1ba:	0f b6       	in	r0, 0x3f	; 63
 1bc:	f8 94       	cli
 1be:	de bf       	out	0x3e, r29	; 62
 1c0:	0f be       	out	0x3f, r0	; 63
 1c2:	cd bf       	out	0x3d, r28	; 61
 1c4:	df 91       	pop	r29
 1c6:	cf 91       	pop	r28
 1c8:	1f 91       	pop	r17
 1ca:	0f 91       	pop	r16
 1cc:	08 95       	ret

000001ce <readUID>:

void readUID()
{
 1ce:	0f 93       	push	r16
 1d0:	1f 93       	push	r17
 1d2:	cf 93       	push	r28
 1d4:	df 93       	push	r29
 1d6:	cd b7       	in	r28, 0x3d	; 61
 1d8:	de b7       	in	r29, 0x3e	; 62
 1da:	c9 54       	subi	r28, 0x49	; 73
 1dc:	d1 09       	sbc	r29, r1
 1de:	0f b6       	in	r0, 0x3f	; 63
 1e0:	f8 94       	cli
 1e2:	de bf       	out	0x3e, r29	; 62
 1e4:	0f be       	out	0x3f, r0	; 63
 1e6:	cd bf       	out	0x3d, r28	; 61
	// we need to send 5 dummy bytes and then receive 8 bytes of unique ID
	char id[13];
	char data[60];
	CS_ON;
 1e8:	88 b3       	in	r24, 0x18	; 24
 1ea:	8f 7e       	andi	r24, 0xEF	; 239
 1ec:	88 bb       	out	0x18, r24	; 24
	SPI_master_tx(UID);
 1ee:	8b e4       	ldi	r24, 0x4B	; 75
 1f0:	0e 94 91 00 	call	0x122	; 0x122 <SPI_master_tx>
	//dummy ids
	id[0] = SPI_master_rx(0x00);
 1f4:	80 e0       	ldi	r24, 0x00	; 0
 1f6:	0e 94 95 00 	call	0x12a	; 0x12a <SPI_master_rx>
	id[1] = SPI_master_rx(0x00);
 1fa:	80 e0       	ldi	r24, 0x00	; 0
 1fc:	0e 94 95 00 	call	0x12a	; 0x12a <SPI_master_rx>
	id[2] = SPI_master_rx(0x00);
 200:	80 e0       	ldi	r24, 0x00	; 0
 202:	0e 94 95 00 	call	0x12a	; 0x12a <SPI_master_rx>
	id[3] = SPI_master_rx(0x00);
 206:	80 e0       	ldi	r24, 0x00	; 0
 208:	0e 94 95 00 	call	0x12a	; 0x12a <SPI_master_rx>
	//Unique IDs
	id[0] = SPI_master_rx(0x00);
 20c:	80 e0       	ldi	r24, 0x00	; 0
 20e:	0e 94 95 00 	call	0x12a	; 0x12a <SPI_master_rx>
 212:	89 83       	std	Y+1, r24	; 0x01
	id[1] = SPI_master_rx(0x00);
 214:	80 e0       	ldi	r24, 0x00	; 0
 216:	0e 94 95 00 	call	0x12a	; 0x12a <SPI_master_rx>
 21a:	8a 83       	std	Y+2, r24	; 0x02
	id[2] = SPI_master_rx(0x00);
 21c:	80 e0       	ldi	r24, 0x00	; 0
 21e:	0e 94 95 00 	call	0x12a	; 0x12a <SPI_master_rx>
 222:	8b 83       	std	Y+3, r24	; 0x03
	id[3] = SPI_master_rx(0x00);
 224:	80 e0       	ldi	r24, 0x00	; 0
 226:	0e 94 95 00 	call	0x12a	; 0x12a <SPI_master_rx>
 22a:	8c 83       	std	Y+4, r24	; 0x04
	id[4] = SPI_master_rx(0x00);
 22c:	80 e0       	ldi	r24, 0x00	; 0
 22e:	0e 94 95 00 	call	0x12a	; 0x12a <SPI_master_rx>
 232:	8d 83       	std	Y+5, r24	; 0x05
	id[5] = SPI_master_rx(0x00);
 234:	80 e0       	ldi	r24, 0x00	; 0
 236:	0e 94 95 00 	call	0x12a	; 0x12a <SPI_master_rx>
 23a:	8e 83       	std	Y+6, r24	; 0x06
	id[6] = SPI_master_rx(0x00);
 23c:	80 e0       	ldi	r24, 0x00	; 0
 23e:	0e 94 95 00 	call	0x12a	; 0x12a <SPI_master_rx>
 242:	8f 83       	std	Y+7, r24	; 0x07
	id[7] = SPI_master_rx(0x00);
 244:	80 e0       	ldi	r24, 0x00	; 0
 246:	0e 94 95 00 	call	0x12a	; 0x12a <SPI_master_rx>
 24a:	88 87       	std	Y+8, r24	; 0x08
	CS_OFF;
 24c:	88 b3       	in	r24, 0x18	; 24
 24e:	80 61       	ori	r24, 0x10	; 16
 250:	88 bb       	out	0x18, r24	; 24
	sprintf(data,"Unique ID: 0x%02X%02X%02X%02X%02X%02X%02X%02X",id[0],id[1],id[2],id[3],id[4],id[5],id[6],id[7]);
 252:	78 85       	ldd	r23, Y+8	; 0x08
 254:	6f 81       	ldd	r22, Y+7	; 0x07
 256:	5e 81       	ldd	r21, Y+6	; 0x06
 258:	4d 81       	ldd	r20, Y+5	; 0x05
 25a:	3c 81       	ldd	r19, Y+4	; 0x04
 25c:	2b 81       	ldd	r18, Y+3	; 0x03
 25e:	9a 81       	ldd	r25, Y+2	; 0x02
 260:	89 81       	ldd	r24, Y+1	; 0x01
 262:	1f 92       	push	r1
 264:	7f 93       	push	r23
 266:	1f 92       	push	r1
 268:	6f 93       	push	r22
 26a:	1f 92       	push	r1
 26c:	5f 93       	push	r21
 26e:	1f 92       	push	r1
 270:	4f 93       	push	r20
 272:	1f 92       	push	r1
 274:	3f 93       	push	r19
 276:	1f 92       	push	r1
 278:	2f 93       	push	r18
 27a:	1f 92       	push	r1
 27c:	9f 93       	push	r25
 27e:	1f 92       	push	r1
 280:	8f 93       	push	r24
 282:	8e e8       	ldi	r24, 0x8E	; 142
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	9f 93       	push	r25
 288:	8f 93       	push	r24
 28a:	8e 01       	movw	r16, r28
 28c:	02 5f       	subi	r16, 0xF2	; 242
 28e:	1f 4f       	sbci	r17, 0xFF	; 255
 290:	1f 93       	push	r17
 292:	0f 93       	push	r16
 294:	0e 94 21 03 	call	0x642	; 0x642 <sprintf>
	uart_print(data);
 298:	c8 01       	movw	r24, r16
 29a:	0e 94 68 00 	call	0xd0	; 0xd0 <uart_print>
}
 29e:	0f b6       	in	r0, 0x3f	; 63
 2a0:	f8 94       	cli
 2a2:	de bf       	out	0x3e, r29	; 62
 2a4:	0f be       	out	0x3f, r0	; 63
 2a6:	cd bf       	out	0x3d, r28	; 61
 2a8:	c7 5b       	subi	r28, 0xB7	; 183
 2aa:	df 4f       	sbci	r29, 0xFF	; 255
 2ac:	0f b6       	in	r0, 0x3f	; 63
 2ae:	f8 94       	cli
 2b0:	de bf       	out	0x3e, r29	; 62
 2b2:	0f be       	out	0x3f, r0	; 63
 2b4:	cd bf       	out	0x3d, r28	; 61
 2b6:	df 91       	pop	r29
 2b8:	cf 91       	pop	r28
 2ba:	1f 91       	pop	r17
 2bc:	0f 91       	pop	r16
 2be:	08 95       	ret

000002c0 <write_enable>:
 2c0:	2f ef       	ldi	r18, 0xFF	; 255
 2c2:	80 e7       	ldi	r24, 0x70	; 112
 2c4:	92 e0       	ldi	r25, 0x02	; 2
 2c6:	21 50       	subi	r18, 0x01	; 1
 2c8:	80 40       	sbci	r24, 0x00	; 0
 2ca:	90 40       	sbci	r25, 0x00	; 0
 2cc:	e1 f7       	brne	.-8      	; 0x2c6 <write_enable+0x6>
 2ce:	00 c0       	rjmp	.+0      	; 0x2d0 <write_enable+0x10>
 2d0:	00 00       	nop

void write_enable()
{
	_delay_ms(100);
	SPI_master_tx(WRITE_ENABLE_CMD);
 2d2:	86 e0       	ldi	r24, 0x06	; 6
 2d4:	0e 94 91 00 	call	0x122	; 0x122 <SPI_master_tx>
 2d8:	08 95       	ret

000002da <write_disable>:
 2da:	2f ef       	ldi	r18, 0xFF	; 255
 2dc:	80 e7       	ldi	r24, 0x70	; 112
 2de:	92 e0       	ldi	r25, 0x02	; 2
 2e0:	21 50       	subi	r18, 0x01	; 1
 2e2:	80 40       	sbci	r24, 0x00	; 0
 2e4:	90 40       	sbci	r25, 0x00	; 0
 2e6:	e1 f7       	brne	.-8      	; 0x2e0 <write_disable+0x6>
 2e8:	00 c0       	rjmp	.+0      	; 0x2ea <write_disable+0x10>
 2ea:	00 00       	nop
}

void write_disable()
{	
	_delay_ms(100);
	SPI_master_tx(WRITE_DISABLE_CMD);
 2ec:	80 e5       	ldi	r24, 0x50	; 80
 2ee:	0e 94 91 00 	call	0x122	; 0x122 <SPI_master_tx>
 2f2:	08 95       	ret

000002f4 <read_sr1>:
}

void read_sr1()
{
 2f4:	0f 93       	push	r16
 2f6:	1f 93       	push	r17
 2f8:	cf 93       	push	r28
 2fa:	df 93       	push	r29
 2fc:	cd b7       	in	r28, 0x3d	; 61
 2fe:	de b7       	in	r29, 0x3e	; 62
 300:	ec 97       	sbiw	r28, 0x3c	; 60
 302:	0f b6       	in	r0, 0x3f	; 63
 304:	f8 94       	cli
 306:	de bf       	out	0x3e, r29	; 62
 308:	0f be       	out	0x3f, r0	; 63
 30a:	cd bf       	out	0x3d, r28	; 61
	char s1;
	char status[60];
	CS_ON;
 30c:	88 b3       	in	r24, 0x18	; 24
 30e:	8f 7e       	andi	r24, 0xEF	; 239
 310:	88 bb       	out	0x18, r24	; 24
 312:	2f ef       	ldi	r18, 0xFF	; 255
 314:	80 e7       	ldi	r24, 0x70	; 112
 316:	92 e0       	ldi	r25, 0x02	; 2
 318:	21 50       	subi	r18, 0x01	; 1
 31a:	80 40       	sbci	r24, 0x00	; 0
 31c:	90 40       	sbci	r25, 0x00	; 0
 31e:	e1 f7       	brne	.-8      	; 0x318 <read_sr1+0x24>
 320:	00 c0       	rjmp	.+0      	; 0x322 <read_sr1+0x2e>
 322:	00 00       	nop
	_delay_ms(100);
	SPI_master_tx(READ_SR1_CMD);
 324:	85 e0       	ldi	r24, 0x05	; 5
 326:	0e 94 91 00 	call	0x122	; 0x122 <SPI_master_tx>
	s1 = SPI_master_rx(0x00);
 32a:	80 e0       	ldi	r24, 0x00	; 0
 32c:	0e 94 95 00 	call	0x12a	; 0x12a <SPI_master_rx>
	CS_OFF;
 330:	98 b3       	in	r25, 0x18	; 24
 332:	90 61       	ori	r25, 0x10	; 16
 334:	98 bb       	out	0x18, r25	; 24
	sprintf(status,"SR1 Status: 0x%02X",s1);
 336:	1f 92       	push	r1
 338:	8f 93       	push	r24
 33a:	8c eb       	ldi	r24, 0xBC	; 188
 33c:	90 e0       	ldi	r25, 0x00	; 0
 33e:	9f 93       	push	r25
 340:	8f 93       	push	r24
 342:	8e 01       	movw	r16, r28
 344:	0f 5f       	subi	r16, 0xFF	; 255
 346:	1f 4f       	sbci	r17, 0xFF	; 255
 348:	1f 93       	push	r17
 34a:	0f 93       	push	r16
 34c:	0e 94 21 03 	call	0x642	; 0x642 <sprintf>
	uart_print(status);
 350:	c8 01       	movw	r24, r16
 352:	0e 94 68 00 	call	0xd0	; 0xd0 <uart_print>
}
 356:	0f 90       	pop	r0
 358:	0f 90       	pop	r0
 35a:	0f 90       	pop	r0
 35c:	0f 90       	pop	r0
 35e:	0f 90       	pop	r0
 360:	0f 90       	pop	r0
 362:	ec 96       	adiw	r28, 0x3c	; 60
 364:	0f b6       	in	r0, 0x3f	; 63
 366:	f8 94       	cli
 368:	de bf       	out	0x3e, r29	; 62
 36a:	0f be       	out	0x3f, r0	; 63
 36c:	cd bf       	out	0x3d, r28	; 61
 36e:	df 91       	pop	r29
 370:	cf 91       	pop	r28
 372:	1f 91       	pop	r17
 374:	0f 91       	pop	r16
 376:	08 95       	ret

00000378 <read_sr2>:

void read_sr2()
{
 378:	0f 93       	push	r16
 37a:	1f 93       	push	r17
 37c:	cf 93       	push	r28
 37e:	df 93       	push	r29
 380:	cd b7       	in	r28, 0x3d	; 61
 382:	de b7       	in	r29, 0x3e	; 62
 384:	ec 97       	sbiw	r28, 0x3c	; 60
 386:	0f b6       	in	r0, 0x3f	; 63
 388:	f8 94       	cli
 38a:	de bf       	out	0x3e, r29	; 62
 38c:	0f be       	out	0x3f, r0	; 63
 38e:	cd bf       	out	0x3d, r28	; 61
	char s2;
	char status[60];
	CS_ON;
 390:	88 b3       	in	r24, 0x18	; 24
 392:	8f 7e       	andi	r24, 0xEF	; 239
 394:	88 bb       	out	0x18, r24	; 24
 396:	2f ef       	ldi	r18, 0xFF	; 255
 398:	80 e7       	ldi	r24, 0x70	; 112
 39a:	92 e0       	ldi	r25, 0x02	; 2
 39c:	21 50       	subi	r18, 0x01	; 1
 39e:	80 40       	sbci	r24, 0x00	; 0
 3a0:	90 40       	sbci	r25, 0x00	; 0
 3a2:	e1 f7       	brne	.-8      	; 0x39c <read_sr2+0x24>
 3a4:	00 c0       	rjmp	.+0      	; 0x3a6 <read_sr2+0x2e>
 3a6:	00 00       	nop
	_delay_ms(100);
	SPI_master_tx(READ_SR2_CMD);
 3a8:	85 e3       	ldi	r24, 0x35	; 53
 3aa:	0e 94 91 00 	call	0x122	; 0x122 <SPI_master_tx>
	s2 = SPI_master_rx(0x00);
 3ae:	80 e0       	ldi	r24, 0x00	; 0
 3b0:	0e 94 95 00 	call	0x12a	; 0x12a <SPI_master_rx>
	CS_OFF;
 3b4:	98 b3       	in	r25, 0x18	; 24
 3b6:	90 61       	ori	r25, 0x10	; 16
 3b8:	98 bb       	out	0x18, r25	; 24
	sprintf(status,"SR2 Status: 0x%02X",s2);
 3ba:	1f 92       	push	r1
 3bc:	8f 93       	push	r24
 3be:	8f ec       	ldi	r24, 0xCF	; 207
 3c0:	90 e0       	ldi	r25, 0x00	; 0
 3c2:	9f 93       	push	r25
 3c4:	8f 93       	push	r24
 3c6:	8e 01       	movw	r16, r28
 3c8:	0f 5f       	subi	r16, 0xFF	; 255
 3ca:	1f 4f       	sbci	r17, 0xFF	; 255
 3cc:	1f 93       	push	r17
 3ce:	0f 93       	push	r16
 3d0:	0e 94 21 03 	call	0x642	; 0x642 <sprintf>
	uart_print(status);	
 3d4:	c8 01       	movw	r24, r16
 3d6:	0e 94 68 00 	call	0xd0	; 0xd0 <uart_print>
}
 3da:	0f 90       	pop	r0
 3dc:	0f 90       	pop	r0
 3de:	0f 90       	pop	r0
 3e0:	0f 90       	pop	r0
 3e2:	0f 90       	pop	r0
 3e4:	0f 90       	pop	r0
 3e6:	ec 96       	adiw	r28, 0x3c	; 60
 3e8:	0f b6       	in	r0, 0x3f	; 63
 3ea:	f8 94       	cli
 3ec:	de bf       	out	0x3e, r29	; 62
 3ee:	0f be       	out	0x3f, r0	; 63
 3f0:	cd bf       	out	0x3d, r28	; 61
 3f2:	df 91       	pop	r29
 3f4:	cf 91       	pop	r28
 3f6:	1f 91       	pop	r17
 3f8:	0f 91       	pop	r16
 3fa:	08 95       	ret

000003fc <read_sr3>:

void read_sr3()
{
 3fc:	0f 93       	push	r16
 3fe:	1f 93       	push	r17
 400:	cf 93       	push	r28
 402:	df 93       	push	r29
 404:	cd b7       	in	r28, 0x3d	; 61
 406:	de b7       	in	r29, 0x3e	; 62
 408:	ec 97       	sbiw	r28, 0x3c	; 60
 40a:	0f b6       	in	r0, 0x3f	; 63
 40c:	f8 94       	cli
 40e:	de bf       	out	0x3e, r29	; 62
 410:	0f be       	out	0x3f, r0	; 63
 412:	cd bf       	out	0x3d, r28	; 61
	char s3;
	char status[60];
	CS_ON;
 414:	88 b3       	in	r24, 0x18	; 24
 416:	8f 7e       	andi	r24, 0xEF	; 239
 418:	88 bb       	out	0x18, r24	; 24
 41a:	2f ef       	ldi	r18, 0xFF	; 255
 41c:	80 e7       	ldi	r24, 0x70	; 112
 41e:	92 e0       	ldi	r25, 0x02	; 2
 420:	21 50       	subi	r18, 0x01	; 1
 422:	80 40       	sbci	r24, 0x00	; 0
 424:	90 40       	sbci	r25, 0x00	; 0
 426:	e1 f7       	brne	.-8      	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 428:	00 c0       	rjmp	.+0      	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 42a:	00 00       	nop
	_delay_ms(100);
	SPI_master_tx(READ_SR3_CMD);
 42c:	85 e3       	ldi	r24, 0x35	; 53
 42e:	0e 94 91 00 	call	0x122	; 0x122 <SPI_master_tx>
	s3 = SPI_master_rx(0x00);
 432:	80 e0       	ldi	r24, 0x00	; 0
 434:	0e 94 95 00 	call	0x12a	; 0x12a <SPI_master_rx>
	CS_OFF;
 438:	98 b3       	in	r25, 0x18	; 24
 43a:	90 61       	ori	r25, 0x10	; 16
 43c:	98 bb       	out	0x18, r25	; 24
	sprintf(status,"SR3 Status: 0x%02X",s3);
 43e:	1f 92       	push	r1
 440:	8f 93       	push	r24
 442:	82 ee       	ldi	r24, 0xE2	; 226
 444:	90 e0       	ldi	r25, 0x00	; 0
 446:	9f 93       	push	r25
 448:	8f 93       	push	r24
 44a:	8e 01       	movw	r16, r28
 44c:	0f 5f       	subi	r16, 0xFF	; 255
 44e:	1f 4f       	sbci	r17, 0xFF	; 255
 450:	1f 93       	push	r17
 452:	0f 93       	push	r16
 454:	0e 94 21 03 	call	0x642	; 0x642 <sprintf>
	uart_print(status);
 458:	c8 01       	movw	r24, r16
 45a:	0e 94 68 00 	call	0xd0	; 0xd0 <uart_print>
}
 45e:	0f 90       	pop	r0
 460:	0f 90       	pop	r0
 462:	0f 90       	pop	r0
 464:	0f 90       	pop	r0
 466:	0f 90       	pop	r0
 468:	0f 90       	pop	r0
 46a:	ec 96       	adiw	r28, 0x3c	; 60
 46c:	0f b6       	in	r0, 0x3f	; 63
 46e:	f8 94       	cli
 470:	de bf       	out	0x3e, r29	; 62
 472:	0f be       	out	0x3f, r0	; 63
 474:	cd bf       	out	0x3d, r28	; 61
 476:	df 91       	pop	r29
 478:	cf 91       	pop	r28
 47a:	1f 91       	pop	r17
 47c:	0f 91       	pop	r16
 47e:	08 95       	ret

00000480 <read_flash>:

void read_flash(char addr1, char addr2, char addr3)
{
 480:	ff 92       	push	r15
 482:	0f 93       	push	r16
 484:	1f 93       	push	r17
 486:	cf 93       	push	r28
 488:	df 93       	push	r29
 48a:	cd b7       	in	r28, 0x3d	; 61
 48c:	de b7       	in	r29, 0x3e	; 62
 48e:	ec 97       	sbiw	r28, 0x3c	; 60
 490:	0f b6       	in	r0, 0x3f	; 63
 492:	f8 94       	cli
 494:	de bf       	out	0x3e, r29	; 62
 496:	0f be       	out	0x3f, r0	; 63
 498:	cd bf       	out	0x3d, r28	; 61
 49a:	f8 2e       	mov	r15, r24
 49c:	06 2f       	mov	r16, r22
 49e:	14 2f       	mov	r17, r20
	CS_ON;
 4a0:	88 b3       	in	r24, 0x18	; 24
 4a2:	8f 7e       	andi	r24, 0xEF	; 239
 4a4:	88 bb       	out	0x18, r24	; 24
	uart_print("Reading flash....");
 4a6:	85 ef       	ldi	r24, 0xF5	; 245
 4a8:	90 e0       	ldi	r25, 0x00	; 0
 4aa:	0e 94 68 00 	call	0xd0	; 0xd0 <uart_print>
 4ae:	2f ef       	ldi	r18, 0xFF	; 255
 4b0:	80 e7       	ldi	r24, 0x70	; 112
 4b2:	92 e0       	ldi	r25, 0x02	; 2
 4b4:	21 50       	subi	r18, 0x01	; 1
 4b6:	80 40       	sbci	r24, 0x00	; 0
 4b8:	90 40       	sbci	r25, 0x00	; 0
 4ba:	e1 f7       	brne	.-8      	; 0x4b4 <read_flash+0x34>
 4bc:	00 c0       	rjmp	.+0      	; 0x4be <read_flash+0x3e>
 4be:	00 00       	nop
	char data;
	char status[60];
	_delay_ms(100);
	SPI_master_tx(READ_DATA_CMD);
 4c0:	83 e0       	ldi	r24, 0x03	; 3
 4c2:	0e 94 91 00 	call	0x122	; 0x122 <SPI_master_tx>
	SPI_master_tx(addr1);
 4c6:	8f 2d       	mov	r24, r15
 4c8:	0e 94 91 00 	call	0x122	; 0x122 <SPI_master_tx>
	SPI_master_tx(addr2);
 4cc:	80 2f       	mov	r24, r16
 4ce:	0e 94 91 00 	call	0x122	; 0x122 <SPI_master_tx>
	SPI_master_tx(addr3);
 4d2:	81 2f       	mov	r24, r17
 4d4:	0e 94 91 00 	call	0x122	; 0x122 <SPI_master_tx>
	data = SPI_master_rx(0x00);
 4d8:	80 e0       	ldi	r24, 0x00	; 0
 4da:	0e 94 95 00 	call	0x12a	; 0x12a <SPI_master_rx>
	CS_OFF;
 4de:	98 b3       	in	r25, 0x18	; 24
 4e0:	90 61       	ori	r25, 0x10	; 16
 4e2:	98 bb       	out	0x18, r25	; 24
	sprintf(status,"The data read is: 0x%02X",data);
 4e4:	1f 92       	push	r1
 4e6:	8f 93       	push	r24
 4e8:	87 e0       	ldi	r24, 0x07	; 7
 4ea:	91 e0       	ldi	r25, 0x01	; 1
 4ec:	9f 93       	push	r25
 4ee:	8f 93       	push	r24
 4f0:	8e 01       	movw	r16, r28
 4f2:	0f 5f       	subi	r16, 0xFF	; 255
 4f4:	1f 4f       	sbci	r17, 0xFF	; 255
 4f6:	1f 93       	push	r17
 4f8:	0f 93       	push	r16
 4fa:	0e 94 21 03 	call	0x642	; 0x642 <sprintf>
	uart_print(status);
 4fe:	c8 01       	movw	r24, r16
 500:	0e 94 68 00 	call	0xd0	; 0xd0 <uart_print>
}
 504:	0f 90       	pop	r0
 506:	0f 90       	pop	r0
 508:	0f 90       	pop	r0
 50a:	0f 90       	pop	r0
 50c:	0f 90       	pop	r0
 50e:	0f 90       	pop	r0
 510:	ec 96       	adiw	r28, 0x3c	; 60
 512:	0f b6       	in	r0, 0x3f	; 63
 514:	f8 94       	cli
 516:	de bf       	out	0x3e, r29	; 62
 518:	0f be       	out	0x3f, r0	; 63
 51a:	cd bf       	out	0x3d, r28	; 61
 51c:	df 91       	pop	r29
 51e:	cf 91       	pop	r28
 520:	1f 91       	pop	r17
 522:	0f 91       	pop	r16
 524:	ff 90       	pop	r15
 526:	08 95       	ret

00000528 <write_flash>:

void write_flash(char addr1, char addr2, char addr3, char data)
{
 528:	0f 93       	push	r16
 52a:	1f 93       	push	r17
 52c:	cf 93       	push	r28
 52e:	df 93       	push	r29
 530:	08 2f       	mov	r16, r24
 532:	16 2f       	mov	r17, r22
 534:	d4 2f       	mov	r29, r20
 536:	c2 2f       	mov	r28, r18
	CS_ON;
 538:	88 b3       	in	r24, 0x18	; 24
 53a:	8f 7e       	andi	r24, 0xEF	; 239
 53c:	88 bb       	out	0x18, r24	; 24
 53e:	2f ef       	ldi	r18, 0xFF	; 255
 540:	80 e7       	ldi	r24, 0x70	; 112
 542:	92 e0       	ldi	r25, 0x02	; 2
 544:	21 50       	subi	r18, 0x01	; 1
 546:	80 40       	sbci	r24, 0x00	; 0
 548:	90 40       	sbci	r25, 0x00	; 0
 54a:	e1 f7       	brne	.-8      	; 0x544 <write_flash+0x1c>
 54c:	00 c0       	rjmp	.+0      	; 0x54e <write_flash+0x26>
 54e:	00 00       	nop
	_delay_ms(100);
	write_enable();
 550:	0e 94 60 01 	call	0x2c0	; 0x2c0 <write_enable>
	SPI_master_tx(PAGE_PROG_CMD);
 554:	82 e0       	ldi	r24, 0x02	; 2
 556:	0e 94 91 00 	call	0x122	; 0x122 <SPI_master_tx>
	SPI_master_tx(addr1);
 55a:	80 2f       	mov	r24, r16
 55c:	0e 94 91 00 	call	0x122	; 0x122 <SPI_master_tx>
	SPI_master_tx(addr2);
 560:	81 2f       	mov	r24, r17
 562:	0e 94 91 00 	call	0x122	; 0x122 <SPI_master_tx>
	SPI_master_tx(addr3);
 566:	8d 2f       	mov	r24, r29
 568:	0e 94 91 00 	call	0x122	; 0x122 <SPI_master_tx>
	SPI_master_tx(data);
 56c:	8c 2f       	mov	r24, r28
 56e:	0e 94 91 00 	call	0x122	; 0x122 <SPI_master_tx>
 572:	2f ef       	ldi	r18, 0xFF	; 255
 574:	89 e6       	ldi	r24, 0x69	; 105
 576:	98 e1       	ldi	r25, 0x18	; 24
 578:	21 50       	subi	r18, 0x01	; 1
 57a:	80 40       	sbci	r24, 0x00	; 0
 57c:	90 40       	sbci	r25, 0x00	; 0
 57e:	e1 f7       	brne	.-8      	; 0x578 <write_flash+0x50>
 580:	00 c0       	rjmp	.+0      	; 0x582 <write_flash+0x5a>
 582:	00 00       	nop
	_delay_ms(1000);
	write_disable();
 584:	0e 94 6d 01 	call	0x2da	; 0x2da <write_disable>
	CS_OFF;
 588:	88 b3       	in	r24, 0x18	; 24
 58a:	80 61       	ori	r24, 0x10	; 16
 58c:	88 bb       	out	0x18, r24	; 24
}
 58e:	df 91       	pop	r29
 590:	cf 91       	pop	r28
 592:	1f 91       	pop	r17
 594:	0f 91       	pop	r16
 596:	08 95       	ret

00000598 <main>:
int main(void)
{
    uart_init();
 598:	0e 94 41 00 	call	0x82	; 0x82 <uart_init>
	SPI_init();
 59c:	0e 94 84 00 	call	0x108	; 0x108 <SPI_init>
    while (1) 
    {
		getID();
 5a0:	0e 94 9a 00 	call	0x134	; 0x134 <getID>
 5a4:	2f ef       	ldi	r18, 0xFF	; 255
 5a6:	89 e6       	ldi	r24, 0x69	; 105
 5a8:	98 e1       	ldi	r25, 0x18	; 24
 5aa:	21 50       	subi	r18, 0x01	; 1
 5ac:	80 40       	sbci	r24, 0x00	; 0
 5ae:	90 40       	sbci	r25, 0x00	; 0
 5b0:	e1 f7       	brne	.-8      	; 0x5aa <main+0x12>
 5b2:	00 c0       	rjmp	.+0      	; 0x5b4 <main+0x1c>
 5b4:	00 00       	nop
		_delay_ms(1000);
		readUID();
 5b6:	0e 94 e7 00 	call	0x1ce	; 0x1ce <readUID>
 5ba:	2f ef       	ldi	r18, 0xFF	; 255
 5bc:	89 e6       	ldi	r24, 0x69	; 105
 5be:	98 e1       	ldi	r25, 0x18	; 24
 5c0:	21 50       	subi	r18, 0x01	; 1
 5c2:	80 40       	sbci	r24, 0x00	; 0
 5c4:	90 40       	sbci	r25, 0x00	; 0
 5c6:	e1 f7       	brne	.-8      	; 0x5c0 <main+0x28>
 5c8:	00 c0       	rjmp	.+0      	; 0x5ca <main+0x32>
 5ca:	00 00       	nop
		_delay_ms(1000);
		read_sr1();
 5cc:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <read_sr1>
		read_sr2();
 5d0:	0e 94 bc 01 	call	0x378	; 0x378 <read_sr2>
		read_sr3();
 5d4:	0e 94 fe 01 	call	0x3fc	; 0x3fc <read_sr3>
 5d8:	2f ef       	ldi	r18, 0xFF	; 255
 5da:	89 e6       	ldi	r24, 0x69	; 105
 5dc:	98 e1       	ldi	r25, 0x18	; 24
 5de:	21 50       	subi	r18, 0x01	; 1
 5e0:	80 40       	sbci	r24, 0x00	; 0
 5e2:	90 40       	sbci	r25, 0x00	; 0
 5e4:	e1 f7       	brne	.-8      	; 0x5de <main+0x46>
 5e6:	00 c0       	rjmp	.+0      	; 0x5e8 <main+0x50>
 5e8:	00 00       	nop
		_delay_ms(1000);
		read_flash(0x12,0x11,0x17);
 5ea:	47 e1       	ldi	r20, 0x17	; 23
 5ec:	61 e1       	ldi	r22, 0x11	; 17
 5ee:	82 e1       	ldi	r24, 0x12	; 18
 5f0:	0e 94 40 02 	call	0x480	; 0x480 <read_flash>
 5f4:	2f ef       	ldi	r18, 0xFF	; 255
 5f6:	89 e6       	ldi	r24, 0x69	; 105
 5f8:	98 e1       	ldi	r25, 0x18	; 24
 5fa:	21 50       	subi	r18, 0x01	; 1
 5fc:	80 40       	sbci	r24, 0x00	; 0
 5fe:	90 40       	sbci	r25, 0x00	; 0
 600:	e1 f7       	brne	.-8      	; 0x5fa <main+0x62>
 602:	00 c0       	rjmp	.+0      	; 0x604 <main+0x6c>
 604:	00 00       	nop
		_delay_ms(1000);
		write_flash(0x12,0x11,0x17,0x66);
 606:	26 e6       	ldi	r18, 0x66	; 102
 608:	47 e1       	ldi	r20, 0x17	; 23
 60a:	61 e1       	ldi	r22, 0x11	; 17
 60c:	82 e1       	ldi	r24, 0x12	; 18
 60e:	0e 94 94 02 	call	0x528	; 0x528 <write_flash>
 612:	2f ef       	ldi	r18, 0xFF	; 255
 614:	89 e6       	ldi	r24, 0x69	; 105
 616:	98 e1       	ldi	r25, 0x18	; 24
 618:	21 50       	subi	r18, 0x01	; 1
 61a:	80 40       	sbci	r24, 0x00	; 0
 61c:	90 40       	sbci	r25, 0x00	; 0
 61e:	e1 f7       	brne	.-8      	; 0x618 <main+0x80>
 620:	00 c0       	rjmp	.+0      	; 0x622 <main+0x8a>
 622:	00 00       	nop
		_delay_ms(1000);
		read_flash(0x12,0x11,0x17);
 624:	47 e1       	ldi	r20, 0x17	; 23
 626:	61 e1       	ldi	r22, 0x11	; 17
 628:	82 e1       	ldi	r24, 0x12	; 18
 62a:	0e 94 40 02 	call	0x480	; 0x480 <read_flash>
 62e:	2f ef       	ldi	r18, 0xFF	; 255
 630:	89 e6       	ldi	r24, 0x69	; 105
 632:	98 e1       	ldi	r25, 0x18	; 24
 634:	21 50       	subi	r18, 0x01	; 1
 636:	80 40       	sbci	r24, 0x00	; 0
 638:	90 40       	sbci	r25, 0x00	; 0
 63a:	e1 f7       	brne	.-8      	; 0x634 <main+0x9c>
 63c:	00 c0       	rjmp	.+0      	; 0x63e <main+0xa6>
 63e:	00 00       	nop
 640:	af cf       	rjmp	.-162    	; 0x5a0 <main+0x8>

00000642 <sprintf>:
 642:	ae e0       	ldi	r26, 0x0E	; 14
 644:	b0 e0       	ldi	r27, 0x00	; 0
 646:	e7 e2       	ldi	r30, 0x27	; 39
 648:	f3 e0       	ldi	r31, 0x03	; 3
 64a:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <__prologue_saves__+0x1c>
 64e:	0d 89       	ldd	r16, Y+21	; 0x15
 650:	1e 89       	ldd	r17, Y+22	; 0x16
 652:	86 e0       	ldi	r24, 0x06	; 6
 654:	8c 83       	std	Y+4, r24	; 0x04
 656:	1a 83       	std	Y+2, r17	; 0x02
 658:	09 83       	std	Y+1, r16	; 0x01
 65a:	8f ef       	ldi	r24, 0xFF	; 255
 65c:	9f e7       	ldi	r25, 0x7F	; 127
 65e:	9e 83       	std	Y+6, r25	; 0x06
 660:	8d 83       	std	Y+5, r24	; 0x05
 662:	ae 01       	movw	r20, r28
 664:	47 5e       	subi	r20, 0xE7	; 231
 666:	5f 4f       	sbci	r21, 0xFF	; 255
 668:	6f 89       	ldd	r22, Y+23	; 0x17
 66a:	78 8d       	ldd	r23, Y+24	; 0x18
 66c:	ce 01       	movw	r24, r28
 66e:	01 96       	adiw	r24, 0x01	; 1
 670:	0e 94 43 03 	call	0x686	; 0x686 <vfprintf>
 674:	ef 81       	ldd	r30, Y+7	; 0x07
 676:	f8 85       	ldd	r31, Y+8	; 0x08
 678:	e0 0f       	add	r30, r16
 67a:	f1 1f       	adc	r31, r17
 67c:	10 82       	st	Z, r1
 67e:	2e 96       	adiw	r28, 0x0e	; 14
 680:	e4 e0       	ldi	r30, 0x04	; 4
 682:	0c 94 fe 05 	jmp	0xbfc	; 0xbfc <__epilogue_restores__+0x1c>

00000686 <vfprintf>:
 686:	ab e0       	ldi	r26, 0x0B	; 11
 688:	b0 e0       	ldi	r27, 0x00	; 0
 68a:	e9 e4       	ldi	r30, 0x49	; 73
 68c:	f3 e0       	ldi	r31, 0x03	; 3
 68e:	0c 94 d4 05 	jmp	0xba8	; 0xba8 <__prologue_saves__>
 692:	6c 01       	movw	r12, r24
 694:	7b 01       	movw	r14, r22
 696:	8a 01       	movw	r16, r20
 698:	fc 01       	movw	r30, r24
 69a:	17 82       	std	Z+7, r1	; 0x07
 69c:	16 82       	std	Z+6, r1	; 0x06
 69e:	83 81       	ldd	r24, Z+3	; 0x03
 6a0:	81 ff       	sbrs	r24, 1
 6a2:	cc c1       	rjmp	.+920    	; 0xa3c <__stack+0x1dd>
 6a4:	ce 01       	movw	r24, r28
 6a6:	01 96       	adiw	r24, 0x01	; 1
 6a8:	3c 01       	movw	r6, r24
 6aa:	f6 01       	movw	r30, r12
 6ac:	93 81       	ldd	r25, Z+3	; 0x03
 6ae:	f7 01       	movw	r30, r14
 6b0:	93 fd       	sbrc	r25, 3
 6b2:	85 91       	lpm	r24, Z+
 6b4:	93 ff       	sbrs	r25, 3
 6b6:	81 91       	ld	r24, Z+
 6b8:	7f 01       	movw	r14, r30
 6ba:	88 23       	and	r24, r24
 6bc:	09 f4       	brne	.+2      	; 0x6c0 <vfprintf+0x3a>
 6be:	ba c1       	rjmp	.+884    	; 0xa34 <__stack+0x1d5>
 6c0:	85 32       	cpi	r24, 0x25	; 37
 6c2:	39 f4       	brne	.+14     	; 0x6d2 <vfprintf+0x4c>
 6c4:	93 fd       	sbrc	r25, 3
 6c6:	85 91       	lpm	r24, Z+
 6c8:	93 ff       	sbrs	r25, 3
 6ca:	81 91       	ld	r24, Z+
 6cc:	7f 01       	movw	r14, r30
 6ce:	85 32       	cpi	r24, 0x25	; 37
 6d0:	29 f4       	brne	.+10     	; 0x6dc <vfprintf+0x56>
 6d2:	b6 01       	movw	r22, r12
 6d4:	90 e0       	ldi	r25, 0x00	; 0
 6d6:	0e 94 3a 05 	call	0xa74	; 0xa74 <fputc>
 6da:	e7 cf       	rjmp	.-50     	; 0x6aa <vfprintf+0x24>
 6dc:	91 2c       	mov	r9, r1
 6de:	21 2c       	mov	r2, r1
 6e0:	31 2c       	mov	r3, r1
 6e2:	ff e1       	ldi	r31, 0x1F	; 31
 6e4:	f3 15       	cp	r31, r3
 6e6:	d8 f0       	brcs	.+54     	; 0x71e <vfprintf+0x98>
 6e8:	8b 32       	cpi	r24, 0x2B	; 43
 6ea:	79 f0       	breq	.+30     	; 0x70a <vfprintf+0x84>
 6ec:	38 f4       	brcc	.+14     	; 0x6fc <vfprintf+0x76>
 6ee:	80 32       	cpi	r24, 0x20	; 32
 6f0:	79 f0       	breq	.+30     	; 0x710 <vfprintf+0x8a>
 6f2:	83 32       	cpi	r24, 0x23	; 35
 6f4:	a1 f4       	brne	.+40     	; 0x71e <vfprintf+0x98>
 6f6:	23 2d       	mov	r18, r3
 6f8:	20 61       	ori	r18, 0x10	; 16
 6fa:	1d c0       	rjmp	.+58     	; 0x736 <vfprintf+0xb0>
 6fc:	8d 32       	cpi	r24, 0x2D	; 45
 6fe:	61 f0       	breq	.+24     	; 0x718 <vfprintf+0x92>
 700:	80 33       	cpi	r24, 0x30	; 48
 702:	69 f4       	brne	.+26     	; 0x71e <vfprintf+0x98>
 704:	23 2d       	mov	r18, r3
 706:	21 60       	ori	r18, 0x01	; 1
 708:	16 c0       	rjmp	.+44     	; 0x736 <vfprintf+0xb0>
 70a:	83 2d       	mov	r24, r3
 70c:	82 60       	ori	r24, 0x02	; 2
 70e:	38 2e       	mov	r3, r24
 710:	e3 2d       	mov	r30, r3
 712:	e4 60       	ori	r30, 0x04	; 4
 714:	3e 2e       	mov	r3, r30
 716:	2a c0       	rjmp	.+84     	; 0x76c <vfprintf+0xe6>
 718:	f3 2d       	mov	r31, r3
 71a:	f8 60       	ori	r31, 0x08	; 8
 71c:	1d c0       	rjmp	.+58     	; 0x758 <vfprintf+0xd2>
 71e:	37 fc       	sbrc	r3, 7
 720:	2d c0       	rjmp	.+90     	; 0x77c <vfprintf+0xf6>
 722:	20 ed       	ldi	r18, 0xD0	; 208
 724:	28 0f       	add	r18, r24
 726:	2a 30       	cpi	r18, 0x0A	; 10
 728:	40 f0       	brcs	.+16     	; 0x73a <vfprintf+0xb4>
 72a:	8e 32       	cpi	r24, 0x2E	; 46
 72c:	b9 f4       	brne	.+46     	; 0x75c <vfprintf+0xd6>
 72e:	36 fc       	sbrc	r3, 6
 730:	81 c1       	rjmp	.+770    	; 0xa34 <__stack+0x1d5>
 732:	23 2d       	mov	r18, r3
 734:	20 64       	ori	r18, 0x40	; 64
 736:	32 2e       	mov	r3, r18
 738:	19 c0       	rjmp	.+50     	; 0x76c <vfprintf+0xe6>
 73a:	36 fe       	sbrs	r3, 6
 73c:	06 c0       	rjmp	.+12     	; 0x74a <vfprintf+0xc4>
 73e:	8a e0       	ldi	r24, 0x0A	; 10
 740:	98 9e       	mul	r9, r24
 742:	20 0d       	add	r18, r0
 744:	11 24       	eor	r1, r1
 746:	92 2e       	mov	r9, r18
 748:	11 c0       	rjmp	.+34     	; 0x76c <vfprintf+0xe6>
 74a:	ea e0       	ldi	r30, 0x0A	; 10
 74c:	2e 9e       	mul	r2, r30
 74e:	20 0d       	add	r18, r0
 750:	11 24       	eor	r1, r1
 752:	22 2e       	mov	r2, r18
 754:	f3 2d       	mov	r31, r3
 756:	f0 62       	ori	r31, 0x20	; 32
 758:	3f 2e       	mov	r3, r31
 75a:	08 c0       	rjmp	.+16     	; 0x76c <vfprintf+0xe6>
 75c:	8c 36       	cpi	r24, 0x6C	; 108
 75e:	21 f4       	brne	.+8      	; 0x768 <vfprintf+0xe2>
 760:	83 2d       	mov	r24, r3
 762:	80 68       	ori	r24, 0x80	; 128
 764:	38 2e       	mov	r3, r24
 766:	02 c0       	rjmp	.+4      	; 0x76c <vfprintf+0xe6>
 768:	88 36       	cpi	r24, 0x68	; 104
 76a:	41 f4       	brne	.+16     	; 0x77c <vfprintf+0xf6>
 76c:	f7 01       	movw	r30, r14
 76e:	93 fd       	sbrc	r25, 3
 770:	85 91       	lpm	r24, Z+
 772:	93 ff       	sbrs	r25, 3
 774:	81 91       	ld	r24, Z+
 776:	7f 01       	movw	r14, r30
 778:	81 11       	cpse	r24, r1
 77a:	b3 cf       	rjmp	.-154    	; 0x6e2 <vfprintf+0x5c>
 77c:	98 2f       	mov	r25, r24
 77e:	9f 7d       	andi	r25, 0xDF	; 223
 780:	95 54       	subi	r25, 0x45	; 69
 782:	93 30       	cpi	r25, 0x03	; 3
 784:	28 f4       	brcc	.+10     	; 0x790 <vfprintf+0x10a>
 786:	0c 5f       	subi	r16, 0xFC	; 252
 788:	1f 4f       	sbci	r17, 0xFF	; 255
 78a:	9f e3       	ldi	r25, 0x3F	; 63
 78c:	99 83       	std	Y+1, r25	; 0x01
 78e:	0d c0       	rjmp	.+26     	; 0x7aa <vfprintf+0x124>
 790:	83 36       	cpi	r24, 0x63	; 99
 792:	31 f0       	breq	.+12     	; 0x7a0 <vfprintf+0x11a>
 794:	83 37       	cpi	r24, 0x73	; 115
 796:	71 f0       	breq	.+28     	; 0x7b4 <vfprintf+0x12e>
 798:	83 35       	cpi	r24, 0x53	; 83
 79a:	09 f0       	breq	.+2      	; 0x79e <vfprintf+0x118>
 79c:	59 c0       	rjmp	.+178    	; 0x850 <__DATA_REGION_LENGTH__+0x50>
 79e:	21 c0       	rjmp	.+66     	; 0x7e2 <vfprintf+0x15c>
 7a0:	f8 01       	movw	r30, r16
 7a2:	80 81       	ld	r24, Z
 7a4:	89 83       	std	Y+1, r24	; 0x01
 7a6:	0e 5f       	subi	r16, 0xFE	; 254
 7a8:	1f 4f       	sbci	r17, 0xFF	; 255
 7aa:	88 24       	eor	r8, r8
 7ac:	83 94       	inc	r8
 7ae:	91 2c       	mov	r9, r1
 7b0:	53 01       	movw	r10, r6
 7b2:	13 c0       	rjmp	.+38     	; 0x7da <vfprintf+0x154>
 7b4:	28 01       	movw	r4, r16
 7b6:	f2 e0       	ldi	r31, 0x02	; 2
 7b8:	4f 0e       	add	r4, r31
 7ba:	51 1c       	adc	r5, r1
 7bc:	f8 01       	movw	r30, r16
 7be:	a0 80       	ld	r10, Z
 7c0:	b1 80       	ldd	r11, Z+1	; 0x01
 7c2:	36 fe       	sbrs	r3, 6
 7c4:	03 c0       	rjmp	.+6      	; 0x7cc <vfprintf+0x146>
 7c6:	69 2d       	mov	r22, r9
 7c8:	70 e0       	ldi	r23, 0x00	; 0
 7ca:	02 c0       	rjmp	.+4      	; 0x7d0 <vfprintf+0x14a>
 7cc:	6f ef       	ldi	r22, 0xFF	; 255
 7ce:	7f ef       	ldi	r23, 0xFF	; 255
 7d0:	c5 01       	movw	r24, r10
 7d2:	0e 94 2f 05 	call	0xa5e	; 0xa5e <strnlen>
 7d6:	4c 01       	movw	r8, r24
 7d8:	82 01       	movw	r16, r4
 7da:	f3 2d       	mov	r31, r3
 7dc:	ff 77       	andi	r31, 0x7F	; 127
 7de:	3f 2e       	mov	r3, r31
 7e0:	16 c0       	rjmp	.+44     	; 0x80e <__DATA_REGION_LENGTH__+0xe>
 7e2:	28 01       	movw	r4, r16
 7e4:	22 e0       	ldi	r18, 0x02	; 2
 7e6:	42 0e       	add	r4, r18
 7e8:	51 1c       	adc	r5, r1
 7ea:	f8 01       	movw	r30, r16
 7ec:	a0 80       	ld	r10, Z
 7ee:	b1 80       	ldd	r11, Z+1	; 0x01
 7f0:	36 fe       	sbrs	r3, 6
 7f2:	03 c0       	rjmp	.+6      	; 0x7fa <vfprintf+0x174>
 7f4:	69 2d       	mov	r22, r9
 7f6:	70 e0       	ldi	r23, 0x00	; 0
 7f8:	02 c0       	rjmp	.+4      	; 0x7fe <vfprintf+0x178>
 7fa:	6f ef       	ldi	r22, 0xFF	; 255
 7fc:	7f ef       	ldi	r23, 0xFF	; 255
 7fe:	c5 01       	movw	r24, r10
 800:	0e 94 24 05 	call	0xa48	; 0xa48 <strnlen_P>
 804:	4c 01       	movw	r8, r24
 806:	f3 2d       	mov	r31, r3
 808:	f0 68       	ori	r31, 0x80	; 128
 80a:	3f 2e       	mov	r3, r31
 80c:	82 01       	movw	r16, r4
 80e:	33 fc       	sbrc	r3, 3
 810:	1b c0       	rjmp	.+54     	; 0x848 <__DATA_REGION_LENGTH__+0x48>
 812:	82 2d       	mov	r24, r2
 814:	90 e0       	ldi	r25, 0x00	; 0
 816:	88 16       	cp	r8, r24
 818:	99 06       	cpc	r9, r25
 81a:	b0 f4       	brcc	.+44     	; 0x848 <__DATA_REGION_LENGTH__+0x48>
 81c:	b6 01       	movw	r22, r12
 81e:	80 e2       	ldi	r24, 0x20	; 32
 820:	90 e0       	ldi	r25, 0x00	; 0
 822:	0e 94 3a 05 	call	0xa74	; 0xa74 <fputc>
 826:	2a 94       	dec	r2
 828:	f4 cf       	rjmp	.-24     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 82a:	f5 01       	movw	r30, r10
 82c:	37 fc       	sbrc	r3, 7
 82e:	85 91       	lpm	r24, Z+
 830:	37 fe       	sbrs	r3, 7
 832:	81 91       	ld	r24, Z+
 834:	5f 01       	movw	r10, r30
 836:	b6 01       	movw	r22, r12
 838:	90 e0       	ldi	r25, 0x00	; 0
 83a:	0e 94 3a 05 	call	0xa74	; 0xa74 <fputc>
 83e:	21 10       	cpse	r2, r1
 840:	2a 94       	dec	r2
 842:	21 e0       	ldi	r18, 0x01	; 1
 844:	82 1a       	sub	r8, r18
 846:	91 08       	sbc	r9, r1
 848:	81 14       	cp	r8, r1
 84a:	91 04       	cpc	r9, r1
 84c:	71 f7       	brne	.-36     	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
 84e:	e8 c0       	rjmp	.+464    	; 0xa20 <__stack+0x1c1>
 850:	84 36       	cpi	r24, 0x64	; 100
 852:	11 f0       	breq	.+4      	; 0x858 <__DATA_REGION_LENGTH__+0x58>
 854:	89 36       	cpi	r24, 0x69	; 105
 856:	41 f5       	brne	.+80     	; 0x8a8 <__stack+0x49>
 858:	f8 01       	movw	r30, r16
 85a:	37 fe       	sbrs	r3, 7
 85c:	07 c0       	rjmp	.+14     	; 0x86c <__stack+0xd>
 85e:	60 81       	ld	r22, Z
 860:	71 81       	ldd	r23, Z+1	; 0x01
 862:	82 81       	ldd	r24, Z+2	; 0x02
 864:	93 81       	ldd	r25, Z+3	; 0x03
 866:	0c 5f       	subi	r16, 0xFC	; 252
 868:	1f 4f       	sbci	r17, 0xFF	; 255
 86a:	08 c0       	rjmp	.+16     	; 0x87c <__stack+0x1d>
 86c:	60 81       	ld	r22, Z
 86e:	71 81       	ldd	r23, Z+1	; 0x01
 870:	07 2e       	mov	r0, r23
 872:	00 0c       	add	r0, r0
 874:	88 0b       	sbc	r24, r24
 876:	99 0b       	sbc	r25, r25
 878:	0e 5f       	subi	r16, 0xFE	; 254
 87a:	1f 4f       	sbci	r17, 0xFF	; 255
 87c:	f3 2d       	mov	r31, r3
 87e:	ff 76       	andi	r31, 0x6F	; 111
 880:	3f 2e       	mov	r3, r31
 882:	97 ff       	sbrs	r25, 7
 884:	09 c0       	rjmp	.+18     	; 0x898 <__stack+0x39>
 886:	90 95       	com	r25
 888:	80 95       	com	r24
 88a:	70 95       	com	r23
 88c:	61 95       	neg	r22
 88e:	7f 4f       	sbci	r23, 0xFF	; 255
 890:	8f 4f       	sbci	r24, 0xFF	; 255
 892:	9f 4f       	sbci	r25, 0xFF	; 255
 894:	f0 68       	ori	r31, 0x80	; 128
 896:	3f 2e       	mov	r3, r31
 898:	2a e0       	ldi	r18, 0x0A	; 10
 89a:	30 e0       	ldi	r19, 0x00	; 0
 89c:	a3 01       	movw	r20, r6
 89e:	0e 94 76 05 	call	0xaec	; 0xaec <__ultoa_invert>
 8a2:	88 2e       	mov	r8, r24
 8a4:	86 18       	sub	r8, r6
 8a6:	45 c0       	rjmp	.+138    	; 0x932 <__stack+0xd3>
 8a8:	85 37       	cpi	r24, 0x75	; 117
 8aa:	31 f4       	brne	.+12     	; 0x8b8 <__stack+0x59>
 8ac:	23 2d       	mov	r18, r3
 8ae:	2f 7e       	andi	r18, 0xEF	; 239
 8b0:	b2 2e       	mov	r11, r18
 8b2:	2a e0       	ldi	r18, 0x0A	; 10
 8b4:	30 e0       	ldi	r19, 0x00	; 0
 8b6:	25 c0       	rjmp	.+74     	; 0x902 <__stack+0xa3>
 8b8:	93 2d       	mov	r25, r3
 8ba:	99 7f       	andi	r25, 0xF9	; 249
 8bc:	b9 2e       	mov	r11, r25
 8be:	8f 36       	cpi	r24, 0x6F	; 111
 8c0:	c1 f0       	breq	.+48     	; 0x8f2 <__stack+0x93>
 8c2:	18 f4       	brcc	.+6      	; 0x8ca <__stack+0x6b>
 8c4:	88 35       	cpi	r24, 0x58	; 88
 8c6:	79 f0       	breq	.+30     	; 0x8e6 <__stack+0x87>
 8c8:	b5 c0       	rjmp	.+362    	; 0xa34 <__stack+0x1d5>
 8ca:	80 37       	cpi	r24, 0x70	; 112
 8cc:	19 f0       	breq	.+6      	; 0x8d4 <__stack+0x75>
 8ce:	88 37       	cpi	r24, 0x78	; 120
 8d0:	21 f0       	breq	.+8      	; 0x8da <__stack+0x7b>
 8d2:	b0 c0       	rjmp	.+352    	; 0xa34 <__stack+0x1d5>
 8d4:	e9 2f       	mov	r30, r25
 8d6:	e0 61       	ori	r30, 0x10	; 16
 8d8:	be 2e       	mov	r11, r30
 8da:	b4 fe       	sbrs	r11, 4
 8dc:	0d c0       	rjmp	.+26     	; 0x8f8 <__stack+0x99>
 8de:	fb 2d       	mov	r31, r11
 8e0:	f4 60       	ori	r31, 0x04	; 4
 8e2:	bf 2e       	mov	r11, r31
 8e4:	09 c0       	rjmp	.+18     	; 0x8f8 <__stack+0x99>
 8e6:	34 fe       	sbrs	r3, 4
 8e8:	0a c0       	rjmp	.+20     	; 0x8fe <__stack+0x9f>
 8ea:	29 2f       	mov	r18, r25
 8ec:	26 60       	ori	r18, 0x06	; 6
 8ee:	b2 2e       	mov	r11, r18
 8f0:	06 c0       	rjmp	.+12     	; 0x8fe <__stack+0x9f>
 8f2:	28 e0       	ldi	r18, 0x08	; 8
 8f4:	30 e0       	ldi	r19, 0x00	; 0
 8f6:	05 c0       	rjmp	.+10     	; 0x902 <__stack+0xa3>
 8f8:	20 e1       	ldi	r18, 0x10	; 16
 8fa:	30 e0       	ldi	r19, 0x00	; 0
 8fc:	02 c0       	rjmp	.+4      	; 0x902 <__stack+0xa3>
 8fe:	20 e1       	ldi	r18, 0x10	; 16
 900:	32 e0       	ldi	r19, 0x02	; 2
 902:	f8 01       	movw	r30, r16
 904:	b7 fe       	sbrs	r11, 7
 906:	07 c0       	rjmp	.+14     	; 0x916 <__stack+0xb7>
 908:	60 81       	ld	r22, Z
 90a:	71 81       	ldd	r23, Z+1	; 0x01
 90c:	82 81       	ldd	r24, Z+2	; 0x02
 90e:	93 81       	ldd	r25, Z+3	; 0x03
 910:	0c 5f       	subi	r16, 0xFC	; 252
 912:	1f 4f       	sbci	r17, 0xFF	; 255
 914:	06 c0       	rjmp	.+12     	; 0x922 <__stack+0xc3>
 916:	60 81       	ld	r22, Z
 918:	71 81       	ldd	r23, Z+1	; 0x01
 91a:	80 e0       	ldi	r24, 0x00	; 0
 91c:	90 e0       	ldi	r25, 0x00	; 0
 91e:	0e 5f       	subi	r16, 0xFE	; 254
 920:	1f 4f       	sbci	r17, 0xFF	; 255
 922:	a3 01       	movw	r20, r6
 924:	0e 94 76 05 	call	0xaec	; 0xaec <__ultoa_invert>
 928:	88 2e       	mov	r8, r24
 92a:	86 18       	sub	r8, r6
 92c:	fb 2d       	mov	r31, r11
 92e:	ff 77       	andi	r31, 0x7F	; 127
 930:	3f 2e       	mov	r3, r31
 932:	36 fe       	sbrs	r3, 6
 934:	0d c0       	rjmp	.+26     	; 0x950 <__stack+0xf1>
 936:	23 2d       	mov	r18, r3
 938:	2e 7f       	andi	r18, 0xFE	; 254
 93a:	a2 2e       	mov	r10, r18
 93c:	89 14       	cp	r8, r9
 93e:	58 f4       	brcc	.+22     	; 0x956 <__stack+0xf7>
 940:	34 fe       	sbrs	r3, 4
 942:	0b c0       	rjmp	.+22     	; 0x95a <__stack+0xfb>
 944:	32 fc       	sbrc	r3, 2
 946:	09 c0       	rjmp	.+18     	; 0x95a <__stack+0xfb>
 948:	83 2d       	mov	r24, r3
 94a:	8e 7e       	andi	r24, 0xEE	; 238
 94c:	a8 2e       	mov	r10, r24
 94e:	05 c0       	rjmp	.+10     	; 0x95a <__stack+0xfb>
 950:	b8 2c       	mov	r11, r8
 952:	a3 2c       	mov	r10, r3
 954:	03 c0       	rjmp	.+6      	; 0x95c <__stack+0xfd>
 956:	b8 2c       	mov	r11, r8
 958:	01 c0       	rjmp	.+2      	; 0x95c <__stack+0xfd>
 95a:	b9 2c       	mov	r11, r9
 95c:	a4 fe       	sbrs	r10, 4
 95e:	0f c0       	rjmp	.+30     	; 0x97e <__stack+0x11f>
 960:	fe 01       	movw	r30, r28
 962:	e8 0d       	add	r30, r8
 964:	f1 1d       	adc	r31, r1
 966:	80 81       	ld	r24, Z
 968:	80 33       	cpi	r24, 0x30	; 48
 96a:	21 f4       	brne	.+8      	; 0x974 <__stack+0x115>
 96c:	9a 2d       	mov	r25, r10
 96e:	99 7e       	andi	r25, 0xE9	; 233
 970:	a9 2e       	mov	r10, r25
 972:	09 c0       	rjmp	.+18     	; 0x986 <__stack+0x127>
 974:	a2 fe       	sbrs	r10, 2
 976:	06 c0       	rjmp	.+12     	; 0x984 <__stack+0x125>
 978:	b3 94       	inc	r11
 97a:	b3 94       	inc	r11
 97c:	04 c0       	rjmp	.+8      	; 0x986 <__stack+0x127>
 97e:	8a 2d       	mov	r24, r10
 980:	86 78       	andi	r24, 0x86	; 134
 982:	09 f0       	breq	.+2      	; 0x986 <__stack+0x127>
 984:	b3 94       	inc	r11
 986:	a3 fc       	sbrc	r10, 3
 988:	11 c0       	rjmp	.+34     	; 0x9ac <__stack+0x14d>
 98a:	a0 fe       	sbrs	r10, 0
 98c:	06 c0       	rjmp	.+12     	; 0x99a <__stack+0x13b>
 98e:	b2 14       	cp	r11, r2
 990:	88 f4       	brcc	.+34     	; 0x9b4 <__stack+0x155>
 992:	28 0c       	add	r2, r8
 994:	92 2c       	mov	r9, r2
 996:	9b 18       	sub	r9, r11
 998:	0e c0       	rjmp	.+28     	; 0x9b6 <__stack+0x157>
 99a:	b2 14       	cp	r11, r2
 99c:	60 f4       	brcc	.+24     	; 0x9b6 <__stack+0x157>
 99e:	b6 01       	movw	r22, r12
 9a0:	80 e2       	ldi	r24, 0x20	; 32
 9a2:	90 e0       	ldi	r25, 0x00	; 0
 9a4:	0e 94 3a 05 	call	0xa74	; 0xa74 <fputc>
 9a8:	b3 94       	inc	r11
 9aa:	f7 cf       	rjmp	.-18     	; 0x99a <__stack+0x13b>
 9ac:	b2 14       	cp	r11, r2
 9ae:	18 f4       	brcc	.+6      	; 0x9b6 <__stack+0x157>
 9b0:	2b 18       	sub	r2, r11
 9b2:	02 c0       	rjmp	.+4      	; 0x9b8 <__stack+0x159>
 9b4:	98 2c       	mov	r9, r8
 9b6:	21 2c       	mov	r2, r1
 9b8:	a4 fe       	sbrs	r10, 4
 9ba:	10 c0       	rjmp	.+32     	; 0x9dc <__stack+0x17d>
 9bc:	b6 01       	movw	r22, r12
 9be:	80 e3       	ldi	r24, 0x30	; 48
 9c0:	90 e0       	ldi	r25, 0x00	; 0
 9c2:	0e 94 3a 05 	call	0xa74	; 0xa74 <fputc>
 9c6:	a2 fe       	sbrs	r10, 2
 9c8:	17 c0       	rjmp	.+46     	; 0x9f8 <__stack+0x199>
 9ca:	a1 fc       	sbrc	r10, 1
 9cc:	03 c0       	rjmp	.+6      	; 0x9d4 <__stack+0x175>
 9ce:	88 e7       	ldi	r24, 0x78	; 120
 9d0:	90 e0       	ldi	r25, 0x00	; 0
 9d2:	02 c0       	rjmp	.+4      	; 0x9d8 <__stack+0x179>
 9d4:	88 e5       	ldi	r24, 0x58	; 88
 9d6:	90 e0       	ldi	r25, 0x00	; 0
 9d8:	b6 01       	movw	r22, r12
 9da:	0c c0       	rjmp	.+24     	; 0x9f4 <__stack+0x195>
 9dc:	8a 2d       	mov	r24, r10
 9de:	86 78       	andi	r24, 0x86	; 134
 9e0:	59 f0       	breq	.+22     	; 0x9f8 <__stack+0x199>
 9e2:	a1 fe       	sbrs	r10, 1
 9e4:	02 c0       	rjmp	.+4      	; 0x9ea <__stack+0x18b>
 9e6:	8b e2       	ldi	r24, 0x2B	; 43
 9e8:	01 c0       	rjmp	.+2      	; 0x9ec <__stack+0x18d>
 9ea:	80 e2       	ldi	r24, 0x20	; 32
 9ec:	a7 fc       	sbrc	r10, 7
 9ee:	8d e2       	ldi	r24, 0x2D	; 45
 9f0:	b6 01       	movw	r22, r12
 9f2:	90 e0       	ldi	r25, 0x00	; 0
 9f4:	0e 94 3a 05 	call	0xa74	; 0xa74 <fputc>
 9f8:	89 14       	cp	r8, r9
 9fa:	38 f4       	brcc	.+14     	; 0xa0a <__stack+0x1ab>
 9fc:	b6 01       	movw	r22, r12
 9fe:	80 e3       	ldi	r24, 0x30	; 48
 a00:	90 e0       	ldi	r25, 0x00	; 0
 a02:	0e 94 3a 05 	call	0xa74	; 0xa74 <fputc>
 a06:	9a 94       	dec	r9
 a08:	f7 cf       	rjmp	.-18     	; 0x9f8 <__stack+0x199>
 a0a:	8a 94       	dec	r8
 a0c:	f3 01       	movw	r30, r6
 a0e:	e8 0d       	add	r30, r8
 a10:	f1 1d       	adc	r31, r1
 a12:	80 81       	ld	r24, Z
 a14:	b6 01       	movw	r22, r12
 a16:	90 e0       	ldi	r25, 0x00	; 0
 a18:	0e 94 3a 05 	call	0xa74	; 0xa74 <fputc>
 a1c:	81 10       	cpse	r8, r1
 a1e:	f5 cf       	rjmp	.-22     	; 0xa0a <__stack+0x1ab>
 a20:	22 20       	and	r2, r2
 a22:	09 f4       	brne	.+2      	; 0xa26 <__stack+0x1c7>
 a24:	42 ce       	rjmp	.-892    	; 0x6aa <vfprintf+0x24>
 a26:	b6 01       	movw	r22, r12
 a28:	80 e2       	ldi	r24, 0x20	; 32
 a2a:	90 e0       	ldi	r25, 0x00	; 0
 a2c:	0e 94 3a 05 	call	0xa74	; 0xa74 <fputc>
 a30:	2a 94       	dec	r2
 a32:	f6 cf       	rjmp	.-20     	; 0xa20 <__stack+0x1c1>
 a34:	f6 01       	movw	r30, r12
 a36:	86 81       	ldd	r24, Z+6	; 0x06
 a38:	97 81       	ldd	r25, Z+7	; 0x07
 a3a:	02 c0       	rjmp	.+4      	; 0xa40 <__stack+0x1e1>
 a3c:	8f ef       	ldi	r24, 0xFF	; 255
 a3e:	9f ef       	ldi	r25, 0xFF	; 255
 a40:	2b 96       	adiw	r28, 0x0b	; 11
 a42:	e2 e1       	ldi	r30, 0x12	; 18
 a44:	0c 94 f0 05 	jmp	0xbe0	; 0xbe0 <__epilogue_restores__>

00000a48 <strnlen_P>:
 a48:	fc 01       	movw	r30, r24
 a4a:	05 90       	lpm	r0, Z+
 a4c:	61 50       	subi	r22, 0x01	; 1
 a4e:	70 40       	sbci	r23, 0x00	; 0
 a50:	01 10       	cpse	r0, r1
 a52:	d8 f7       	brcc	.-10     	; 0xa4a <strnlen_P+0x2>
 a54:	80 95       	com	r24
 a56:	90 95       	com	r25
 a58:	8e 0f       	add	r24, r30
 a5a:	9f 1f       	adc	r25, r31
 a5c:	08 95       	ret

00000a5e <strnlen>:
 a5e:	fc 01       	movw	r30, r24
 a60:	61 50       	subi	r22, 0x01	; 1
 a62:	70 40       	sbci	r23, 0x00	; 0
 a64:	01 90       	ld	r0, Z+
 a66:	01 10       	cpse	r0, r1
 a68:	d8 f7       	brcc	.-10     	; 0xa60 <strnlen+0x2>
 a6a:	80 95       	com	r24
 a6c:	90 95       	com	r25
 a6e:	8e 0f       	add	r24, r30
 a70:	9f 1f       	adc	r25, r31
 a72:	08 95       	ret

00000a74 <fputc>:
 a74:	0f 93       	push	r16
 a76:	1f 93       	push	r17
 a78:	cf 93       	push	r28
 a7a:	df 93       	push	r29
 a7c:	fb 01       	movw	r30, r22
 a7e:	23 81       	ldd	r18, Z+3	; 0x03
 a80:	21 fd       	sbrc	r18, 1
 a82:	03 c0       	rjmp	.+6      	; 0xa8a <fputc+0x16>
 a84:	8f ef       	ldi	r24, 0xFF	; 255
 a86:	9f ef       	ldi	r25, 0xFF	; 255
 a88:	2c c0       	rjmp	.+88     	; 0xae2 <fputc+0x6e>
 a8a:	22 ff       	sbrs	r18, 2
 a8c:	16 c0       	rjmp	.+44     	; 0xaba <fputc+0x46>
 a8e:	46 81       	ldd	r20, Z+6	; 0x06
 a90:	57 81       	ldd	r21, Z+7	; 0x07
 a92:	24 81       	ldd	r18, Z+4	; 0x04
 a94:	35 81       	ldd	r19, Z+5	; 0x05
 a96:	42 17       	cp	r20, r18
 a98:	53 07       	cpc	r21, r19
 a9a:	44 f4       	brge	.+16     	; 0xaac <fputc+0x38>
 a9c:	a0 81       	ld	r26, Z
 a9e:	b1 81       	ldd	r27, Z+1	; 0x01
 aa0:	9d 01       	movw	r18, r26
 aa2:	2f 5f       	subi	r18, 0xFF	; 255
 aa4:	3f 4f       	sbci	r19, 0xFF	; 255
 aa6:	31 83       	std	Z+1, r19	; 0x01
 aa8:	20 83       	st	Z, r18
 aaa:	8c 93       	st	X, r24
 aac:	26 81       	ldd	r18, Z+6	; 0x06
 aae:	37 81       	ldd	r19, Z+7	; 0x07
 ab0:	2f 5f       	subi	r18, 0xFF	; 255
 ab2:	3f 4f       	sbci	r19, 0xFF	; 255
 ab4:	37 83       	std	Z+7, r19	; 0x07
 ab6:	26 83       	std	Z+6, r18	; 0x06
 ab8:	14 c0       	rjmp	.+40     	; 0xae2 <fputc+0x6e>
 aba:	8b 01       	movw	r16, r22
 abc:	ec 01       	movw	r28, r24
 abe:	fb 01       	movw	r30, r22
 ac0:	00 84       	ldd	r0, Z+8	; 0x08
 ac2:	f1 85       	ldd	r31, Z+9	; 0x09
 ac4:	e0 2d       	mov	r30, r0
 ac6:	09 95       	icall
 ac8:	89 2b       	or	r24, r25
 aca:	e1 f6       	brne	.-72     	; 0xa84 <fputc+0x10>
 acc:	d8 01       	movw	r26, r16
 ace:	16 96       	adiw	r26, 0x06	; 6
 ad0:	8d 91       	ld	r24, X+
 ad2:	9c 91       	ld	r25, X
 ad4:	17 97       	sbiw	r26, 0x07	; 7
 ad6:	01 96       	adiw	r24, 0x01	; 1
 ad8:	17 96       	adiw	r26, 0x07	; 7
 ada:	9c 93       	st	X, r25
 adc:	8e 93       	st	-X, r24
 ade:	16 97       	sbiw	r26, 0x06	; 6
 ae0:	ce 01       	movw	r24, r28
 ae2:	df 91       	pop	r29
 ae4:	cf 91       	pop	r28
 ae6:	1f 91       	pop	r17
 ae8:	0f 91       	pop	r16
 aea:	08 95       	ret

00000aec <__ultoa_invert>:
 aec:	fa 01       	movw	r30, r20
 aee:	aa 27       	eor	r26, r26
 af0:	28 30       	cpi	r18, 0x08	; 8
 af2:	51 f1       	breq	.+84     	; 0xb48 <__ultoa_invert+0x5c>
 af4:	20 31       	cpi	r18, 0x10	; 16
 af6:	81 f1       	breq	.+96     	; 0xb58 <__ultoa_invert+0x6c>
 af8:	e8 94       	clt
 afa:	6f 93       	push	r22
 afc:	6e 7f       	andi	r22, 0xFE	; 254
 afe:	6e 5f       	subi	r22, 0xFE	; 254
 b00:	7f 4f       	sbci	r23, 0xFF	; 255
 b02:	8f 4f       	sbci	r24, 0xFF	; 255
 b04:	9f 4f       	sbci	r25, 0xFF	; 255
 b06:	af 4f       	sbci	r26, 0xFF	; 255
 b08:	b1 e0       	ldi	r27, 0x01	; 1
 b0a:	3e d0       	rcall	.+124    	; 0xb88 <__ultoa_invert+0x9c>
 b0c:	b4 e0       	ldi	r27, 0x04	; 4
 b0e:	3c d0       	rcall	.+120    	; 0xb88 <__ultoa_invert+0x9c>
 b10:	67 0f       	add	r22, r23
 b12:	78 1f       	adc	r23, r24
 b14:	89 1f       	adc	r24, r25
 b16:	9a 1f       	adc	r25, r26
 b18:	a1 1d       	adc	r26, r1
 b1a:	68 0f       	add	r22, r24
 b1c:	79 1f       	adc	r23, r25
 b1e:	8a 1f       	adc	r24, r26
 b20:	91 1d       	adc	r25, r1
 b22:	a1 1d       	adc	r26, r1
 b24:	6a 0f       	add	r22, r26
 b26:	71 1d       	adc	r23, r1
 b28:	81 1d       	adc	r24, r1
 b2a:	91 1d       	adc	r25, r1
 b2c:	a1 1d       	adc	r26, r1
 b2e:	20 d0       	rcall	.+64     	; 0xb70 <__ultoa_invert+0x84>
 b30:	09 f4       	brne	.+2      	; 0xb34 <__ultoa_invert+0x48>
 b32:	68 94       	set
 b34:	3f 91       	pop	r19
 b36:	2a e0       	ldi	r18, 0x0A	; 10
 b38:	26 9f       	mul	r18, r22
 b3a:	11 24       	eor	r1, r1
 b3c:	30 19       	sub	r19, r0
 b3e:	30 5d       	subi	r19, 0xD0	; 208
 b40:	31 93       	st	Z+, r19
 b42:	de f6       	brtc	.-74     	; 0xafa <__ultoa_invert+0xe>
 b44:	cf 01       	movw	r24, r30
 b46:	08 95       	ret
 b48:	46 2f       	mov	r20, r22
 b4a:	47 70       	andi	r20, 0x07	; 7
 b4c:	40 5d       	subi	r20, 0xD0	; 208
 b4e:	41 93       	st	Z+, r20
 b50:	b3 e0       	ldi	r27, 0x03	; 3
 b52:	0f d0       	rcall	.+30     	; 0xb72 <__ultoa_invert+0x86>
 b54:	c9 f7       	brne	.-14     	; 0xb48 <__ultoa_invert+0x5c>
 b56:	f6 cf       	rjmp	.-20     	; 0xb44 <__ultoa_invert+0x58>
 b58:	46 2f       	mov	r20, r22
 b5a:	4f 70       	andi	r20, 0x0F	; 15
 b5c:	40 5d       	subi	r20, 0xD0	; 208
 b5e:	4a 33       	cpi	r20, 0x3A	; 58
 b60:	18 f0       	brcs	.+6      	; 0xb68 <__ultoa_invert+0x7c>
 b62:	49 5d       	subi	r20, 0xD9	; 217
 b64:	31 fd       	sbrc	r19, 1
 b66:	40 52       	subi	r20, 0x20	; 32
 b68:	41 93       	st	Z+, r20
 b6a:	02 d0       	rcall	.+4      	; 0xb70 <__ultoa_invert+0x84>
 b6c:	a9 f7       	brne	.-22     	; 0xb58 <__ultoa_invert+0x6c>
 b6e:	ea cf       	rjmp	.-44     	; 0xb44 <__ultoa_invert+0x58>
 b70:	b4 e0       	ldi	r27, 0x04	; 4
 b72:	a6 95       	lsr	r26
 b74:	97 95       	ror	r25
 b76:	87 95       	ror	r24
 b78:	77 95       	ror	r23
 b7a:	67 95       	ror	r22
 b7c:	ba 95       	dec	r27
 b7e:	c9 f7       	brne	.-14     	; 0xb72 <__ultoa_invert+0x86>
 b80:	00 97       	sbiw	r24, 0x00	; 0
 b82:	61 05       	cpc	r22, r1
 b84:	71 05       	cpc	r23, r1
 b86:	08 95       	ret
 b88:	9b 01       	movw	r18, r22
 b8a:	ac 01       	movw	r20, r24
 b8c:	0a 2e       	mov	r0, r26
 b8e:	06 94       	lsr	r0
 b90:	57 95       	ror	r21
 b92:	47 95       	ror	r20
 b94:	37 95       	ror	r19
 b96:	27 95       	ror	r18
 b98:	ba 95       	dec	r27
 b9a:	c9 f7       	brne	.-14     	; 0xb8e <__ultoa_invert+0xa2>
 b9c:	62 0f       	add	r22, r18
 b9e:	73 1f       	adc	r23, r19
 ba0:	84 1f       	adc	r24, r20
 ba2:	95 1f       	adc	r25, r21
 ba4:	a0 1d       	adc	r26, r0
 ba6:	08 95       	ret

00000ba8 <__prologue_saves__>:
 ba8:	2f 92       	push	r2
 baa:	3f 92       	push	r3
 bac:	4f 92       	push	r4
 bae:	5f 92       	push	r5
 bb0:	6f 92       	push	r6
 bb2:	7f 92       	push	r7
 bb4:	8f 92       	push	r8
 bb6:	9f 92       	push	r9
 bb8:	af 92       	push	r10
 bba:	bf 92       	push	r11
 bbc:	cf 92       	push	r12
 bbe:	df 92       	push	r13
 bc0:	ef 92       	push	r14
 bc2:	ff 92       	push	r15
 bc4:	0f 93       	push	r16
 bc6:	1f 93       	push	r17
 bc8:	cf 93       	push	r28
 bca:	df 93       	push	r29
 bcc:	cd b7       	in	r28, 0x3d	; 61
 bce:	de b7       	in	r29, 0x3e	; 62
 bd0:	ca 1b       	sub	r28, r26
 bd2:	db 0b       	sbc	r29, r27
 bd4:	0f b6       	in	r0, 0x3f	; 63
 bd6:	f8 94       	cli
 bd8:	de bf       	out	0x3e, r29	; 62
 bda:	0f be       	out	0x3f, r0	; 63
 bdc:	cd bf       	out	0x3d, r28	; 61
 bde:	09 94       	ijmp

00000be0 <__epilogue_restores__>:
 be0:	2a 88       	ldd	r2, Y+18	; 0x12
 be2:	39 88       	ldd	r3, Y+17	; 0x11
 be4:	48 88       	ldd	r4, Y+16	; 0x10
 be6:	5f 84       	ldd	r5, Y+15	; 0x0f
 be8:	6e 84       	ldd	r6, Y+14	; 0x0e
 bea:	7d 84       	ldd	r7, Y+13	; 0x0d
 bec:	8c 84       	ldd	r8, Y+12	; 0x0c
 bee:	9b 84       	ldd	r9, Y+11	; 0x0b
 bf0:	aa 84       	ldd	r10, Y+10	; 0x0a
 bf2:	b9 84       	ldd	r11, Y+9	; 0x09
 bf4:	c8 84       	ldd	r12, Y+8	; 0x08
 bf6:	df 80       	ldd	r13, Y+7	; 0x07
 bf8:	ee 80       	ldd	r14, Y+6	; 0x06
 bfa:	fd 80       	ldd	r15, Y+5	; 0x05
 bfc:	0c 81       	ldd	r16, Y+4	; 0x04
 bfe:	1b 81       	ldd	r17, Y+3	; 0x03
 c00:	aa 81       	ldd	r26, Y+2	; 0x02
 c02:	b9 81       	ldd	r27, Y+1	; 0x01
 c04:	ce 0f       	add	r28, r30
 c06:	d1 1d       	adc	r29, r1
 c08:	0f b6       	in	r0, 0x3f	; 63
 c0a:	f8 94       	cli
 c0c:	de bf       	out	0x3e, r29	; 62
 c0e:	0f be       	out	0x3f, r0	; 63
 c10:	cd bf       	out	0x3d, r28	; 61
 c12:	ed 01       	movw	r28, r26
 c14:	08 95       	ret

00000c16 <_exit>:
 c16:	f8 94       	cli

00000c18 <__stop_program>:
 c18:	ff cf       	rjmp	.-2      	; 0xc18 <__stop_program>
