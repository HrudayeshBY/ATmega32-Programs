
lcd_custom_character.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000230  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000284  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000284  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002b4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  000002f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b74  00000000  00000000  00000330  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005ef  00000000  00000000  00000ea4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000374  00000000  00000000  00001493  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000064  00000000  00000000  00001808  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000352  00000000  00000000  0000186c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000024e  00000000  00000000  00001bbe  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00001e0c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 0b 01 	call	0x216	; 0x216 <main>
  64:	0c 94 16 01 	jmp	0x22c	; 0x22c <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <sendCommand>:
#include <avr/io.h>
#include <util/delay.h>

void sendCommand(char cmd)
{
	PORTC = cmd;
  6c:	85 bb       	out	0x15, r24	; 21
	PORTD = 0x20;
  6e:	80 e2       	ldi	r24, 0x20	; 32
  70:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  72:	8f ec       	ldi	r24, 0xCF	; 207
  74:	97 e0       	ldi	r25, 0x07	; 7
  76:	01 97       	sbiw	r24, 0x01	; 1
  78:	f1 f7       	brne	.-4      	; 0x76 <sendCommand+0xa>
  7a:	00 c0       	rjmp	.+0      	; 0x7c <sendCommand+0x10>
  7c:	00 00       	nop
	_delay_ms(1);
	PORTD = 0x00;
  7e:	12 ba       	out	0x12, r1	; 18
  80:	9f e7       	ldi	r25, 0x7F	; 127
  82:	28 e3       	ldi	r18, 0x38	; 56
  84:	81 e0       	ldi	r24, 0x01	; 1
  86:	91 50       	subi	r25, 0x01	; 1
  88:	20 40       	sbci	r18, 0x00	; 0
  8a:	80 40       	sbci	r24, 0x00	; 0
  8c:	e1 f7       	brne	.-8      	; 0x86 <sendCommand+0x1a>
  8e:	00 c0       	rjmp	.+0      	; 0x90 <sendCommand+0x24>
  90:	00 00       	nop
  92:	08 95       	ret

00000094 <sendData>:
	_delay_ms(50);
}

void sendData(char data)
{
	PORTC = data;
  94:	85 bb       	out	0x15, r24	; 21
	PORTD = 0xA0;
  96:	80 ea       	ldi	r24, 0xA0	; 160
  98:	82 bb       	out	0x12, r24	; 18
  9a:	8f ec       	ldi	r24, 0xCF	; 207
  9c:	97 e0       	ldi	r25, 0x07	; 7
  9e:	01 97       	sbiw	r24, 0x01	; 1
  a0:	f1 f7       	brne	.-4      	; 0x9e <sendData+0xa>
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <sendData+0x10>
  a4:	00 00       	nop
	_delay_ms(1);
	PORTD = 0x00;
  a6:	12 ba       	out	0x12, r1	; 18
  a8:	9f e7       	ldi	r25, 0x7F	; 127
  aa:	28 e3       	ldi	r18, 0x38	; 56
  ac:	81 e0       	ldi	r24, 0x01	; 1
  ae:	91 50       	subi	r25, 0x01	; 1
  b0:	20 40       	sbci	r18, 0x00	; 0
  b2:	80 40       	sbci	r24, 0x00	; 0
  b4:	e1 f7       	brne	.-8      	; 0xae <sendData+0x1a>
  b6:	00 c0       	rjmp	.+0      	; 0xb8 <sendData+0x24>
  b8:	00 00       	nop
  ba:	08 95       	ret

000000bc <lcd_init>:
	_delay_ms(50);
}

void lcd_init()
{
	sendCommand(0x38);
  bc:	88 e3       	ldi	r24, 0x38	; 56
  be:	0e 94 36 00 	call	0x6c	; 0x6c <sendCommand>
	sendCommand(0x01);
  c2:	81 e0       	ldi	r24, 0x01	; 1
  c4:	0e 94 36 00 	call	0x6c	; 0x6c <sendCommand>
	sendCommand(0x0E);
  c8:	8e e0       	ldi	r24, 0x0E	; 14
  ca:	0e 94 36 00 	call	0x6c	; 0x6c <sendCommand>
	sendCommand(0x80);
  ce:	80 e8       	ldi	r24, 0x80	; 128
  d0:	0e 94 36 00 	call	0x6c	; 0x6c <sendCommand>
  d4:	08 95       	ret

000000d6 <custom_char>:
}

void custom_char()
{
	sendCommand(0x48);
  d6:	88 e4       	ldi	r24, 0x48	; 72
  d8:	0e 94 36 00 	call	0x6c	; 0x6c <sendCommand>
	sendData(0x1F);sendData(0x02);sendData(0x1F);sendData(0x02);
  dc:	8f e1       	ldi	r24, 0x1F	; 31
  de:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
  e2:	82 e0       	ldi	r24, 0x02	; 2
  e4:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
  e8:	8f e1       	ldi	r24, 0x1F	; 31
  ea:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
  ee:	82 e0       	ldi	r24, 0x02	; 2
  f0:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
	sendData(0x1C);sendData(0x08);sendData(0x04);sendData(0x02);
  f4:	8c e1       	ldi	r24, 0x1C	; 28
  f6:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
  fa:	88 e0       	ldi	r24, 0x08	; 8
  fc:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
 100:	84 e0       	ldi	r24, 0x04	; 4
 102:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
 106:	82 e0       	ldi	r24, 0x02	; 2
 108:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
	sendCommand(0x80);
 10c:	80 e8       	ldi	r24, 0x80	; 128
 10e:	0e 94 36 00 	call	0x6c	; 0x6c <sendCommand>
	sendData(0x01);
 112:	81 e0       	ldi	r24, 0x01	; 1
 114:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
 118:	2f ef       	ldi	r18, 0xFF	; 255
 11a:	84 e3       	ldi	r24, 0x34	; 52
 11c:	9c e0       	ldi	r25, 0x0C	; 12
 11e:	21 50       	subi	r18, 0x01	; 1
 120:	80 40       	sbci	r24, 0x00	; 0
 122:	90 40       	sbci	r25, 0x00	; 0
 124:	e1 f7       	brne	.-8      	; 0x11e <custom_char+0x48>
 126:	00 c0       	rjmp	.+0      	; 0x128 <custom_char+0x52>
 128:	00 00       	nop
	
	_delay_ms(500);
	
	sendCommand(0x50);
 12a:	80 e5       	ldi	r24, 0x50	; 80
 12c:	0e 94 36 00 	call	0x6c	; 0x6c <sendCommand>
	sendData(0x00);sendData(0x00);sendData(0x1B);sendData(0x1F);
 130:	80 e0       	ldi	r24, 0x00	; 0
 132:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
 136:	80 e0       	ldi	r24, 0x00	; 0
 138:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
 13c:	8b e1       	ldi	r24, 0x1B	; 27
 13e:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
 142:	8f e1       	ldi	r24, 0x1F	; 31
 144:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
	sendData(0x0E);sendData(0x04);sendData(0x00);sendData(0x00);
 148:	8e e0       	ldi	r24, 0x0E	; 14
 14a:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
 14e:	84 e0       	ldi	r24, 0x04	; 4
 150:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
 154:	80 e0       	ldi	r24, 0x00	; 0
 156:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
 15a:	80 e0       	ldi	r24, 0x00	; 0
 15c:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
	sendCommand(0x82);
 160:	82 e8       	ldi	r24, 0x82	; 130
 162:	0e 94 36 00 	call	0x6c	; 0x6c <sendCommand>
	sendData(0x02);
 166:	82 e0       	ldi	r24, 0x02	; 2
 168:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
 16c:	2f ef       	ldi	r18, 0xFF	; 255
 16e:	84 e3       	ldi	r24, 0x34	; 52
 170:	9c e0       	ldi	r25, 0x0C	; 12
 172:	21 50       	subi	r18, 0x01	; 1
 174:	80 40       	sbci	r24, 0x00	; 0
 176:	90 40       	sbci	r25, 0x00	; 0
 178:	e1 f7       	brne	.-8      	; 0x172 <custom_char+0x9c>
 17a:	00 c0       	rjmp	.+0      	; 0x17c <custom_char+0xa6>
 17c:	00 00       	nop
	
	_delay_ms(500);
	
	sendCommand(0x58);
 17e:	88 e5       	ldi	r24, 0x58	; 88
 180:	0e 94 36 00 	call	0x6c	; 0x6c <sendCommand>
	sendData(0x00);sendData(0x1B);sendData(0x1B);sendData(0x00);
 184:	80 e0       	ldi	r24, 0x00	; 0
 186:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
 18a:	8b e1       	ldi	r24, 0x1B	; 27
 18c:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
 190:	8b e1       	ldi	r24, 0x1B	; 27
 192:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
 196:	80 e0       	ldi	r24, 0x00	; 0
 198:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
	sendData(0x00);sendData(0x11);sendData(0x0E);sendData(0x00);
 19c:	80 e0       	ldi	r24, 0x00	; 0
 19e:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
 1a2:	81 e1       	ldi	r24, 0x11	; 17
 1a4:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
 1a8:	8e e0       	ldi	r24, 0x0E	; 14
 1aa:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
 1ae:	80 e0       	ldi	r24, 0x00	; 0
 1b0:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
	sendCommand(0x84);
 1b4:	84 e8       	ldi	r24, 0x84	; 132
 1b6:	0e 94 36 00 	call	0x6c	; 0x6c <sendCommand>
	sendData(0x03);
 1ba:	83 e0       	ldi	r24, 0x03	; 3
 1bc:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
 1c0:	2f ef       	ldi	r18, 0xFF	; 255
 1c2:	84 e3       	ldi	r24, 0x34	; 52
 1c4:	9c e0       	ldi	r25, 0x0C	; 12
 1c6:	21 50       	subi	r18, 0x01	; 1
 1c8:	80 40       	sbci	r24, 0x00	; 0
 1ca:	90 40       	sbci	r25, 0x00	; 0
 1cc:	e1 f7       	brne	.-8      	; 0x1c6 <custom_char+0xf0>
 1ce:	00 c0       	rjmp	.+0      	; 0x1d0 <custom_char+0xfa>
 1d0:	00 00       	nop
	
	_delay_ms(500);
	
	sendCommand(0x60);
 1d2:	80 e6       	ldi	r24, 0x60	; 96
 1d4:	0e 94 36 00 	call	0x6c	; 0x6c <sendCommand>
	sendData(0x11);sendData(0x0A);sendData(0X04);sendData(0x04);
 1d8:	81 e1       	ldi	r24, 0x11	; 17
 1da:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
 1de:	8a e0       	ldi	r24, 0x0A	; 10
 1e0:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
 1e4:	84 e0       	ldi	r24, 0x04	; 4
 1e6:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
 1ea:	84 e0       	ldi	r24, 0x04	; 4
 1ec:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
	sendData(0x04);sendData(0x00);sendData(0x00);sendData(0x00);
 1f0:	84 e0       	ldi	r24, 0x04	; 4
 1f2:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
 1f6:	80 e0       	ldi	r24, 0x00	; 0
 1f8:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
 1fc:	80 e0       	ldi	r24, 0x00	; 0
 1fe:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
 202:	80 e0       	ldi	r24, 0x00	; 0
 204:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
	sendCommand(0x86);
 208:	86 e8       	ldi	r24, 0x86	; 134
 20a:	0e 94 36 00 	call	0x6c	; 0x6c <sendCommand>
	sendData(0x04);
 20e:	84 e0       	ldi	r24, 0x04	; 4
 210:	0e 94 4a 00 	call	0x94	; 0x94 <sendData>
 214:	08 95       	ret

00000216 <main>:
	

}
int main(void)
{
	DDRC = 0xFF;
 216:	8f ef       	ldi	r24, 0xFF	; 255
 218:	84 bb       	out	0x14, r24	; 20
	DDRD = 0xE0;
 21a:	80 ee       	ldi	r24, 0xE0	; 224
 21c:	81 bb       	out	0x11, r24	; 17
	PORTC = 0x00;
 21e:	15 ba       	out	0x15, r1	; 21
	PORTD = 0x00;
 220:	12 ba       	out	0x12, r1	; 18
	
	lcd_init();
 222:	0e 94 5e 00 	call	0xbc	; 0xbc <lcd_init>
	custom_char();
 226:	0e 94 6b 00 	call	0xd6	; 0xd6 <custom_char>
 22a:	ff cf       	rjmp	.-2      	; 0x22a <main+0x14>

0000022c <_exit>:
 22c:	f8 94       	cli

0000022e <__stop_program>:
 22e:	ff cf       	rjmp	.-2      	; 0x22e <__stop_program>
