
timer1_interrupt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000ba  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000010e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000010e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000140  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  0000017c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000058f  00000000  00000000  000001a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000511  00000000  00000000  00000733  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001f9  00000000  00000000  00000c44  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000048  00000000  00000000  00000e40  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002e4  00000000  00000000  00000e88  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000049  00000000  00000000  0000116c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  000011b5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 36 00 	jmp	0x6c	; 0x6c <__vector_9>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 4b 00 	call	0x96	; 0x96 <main>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <__vector_9>:
#include <avr/io.h>
#include <util/delay.h>
#include <avr/interrupt.h>

ISR (TIMER1_OVF_vect)
{
  6c:	1f 92       	push	r1
  6e:	0f 92       	push	r0
  70:	0f b6       	in	r0, 0x3f	; 63
  72:	0f 92       	push	r0
  74:	11 24       	eor	r1, r1
  76:	8f 93       	push	r24
  78:	9f 93       	push	r25
	PORTD ^= 0x01;
  7a:	92 b3       	in	r25, 0x12	; 18
  7c:	81 e0       	ldi	r24, 0x01	; 1
  7e:	89 27       	eor	r24, r25
  80:	82 bb       	out	0x12, r24	; 18
	TIFR |= (1<<TOV1);
  82:	88 b7       	in	r24, 0x38	; 56
  84:	84 60       	ori	r24, 0x04	; 4
  86:	88 bf       	out	0x38, r24	; 56
}
  88:	9f 91       	pop	r25
  8a:	8f 91       	pop	r24
  8c:	0f 90       	pop	r0
  8e:	0f be       	out	0x3f, r0	; 63
  90:	0f 90       	pop	r0
  92:	1f 90       	pop	r1
  94:	18 95       	reti

00000096 <main>:
int main(void)
{
	sei();
  96:	78 94       	sei
    DDRD |= (1<<PD0);
  98:	81 b3       	in	r24, 0x11	; 17
  9a:	81 60       	ori	r24, 0x01	; 1
  9c:	81 bb       	out	0x11, r24	; 17
	PORTD &= ~(1<<PD0);
  9e:	82 b3       	in	r24, 0x12	; 18
  a0:	8e 7f       	andi	r24, 0xFE	; 254
  a2:	82 bb       	out	0x12, r24	; 18
	TCNT1 = 0x0000;
  a4:	1d bc       	out	0x2d, r1	; 45
  a6:	1c bc       	out	0x2c, r1	; 44
	TCCR1A = 0x00;
  a8:	1f bc       	out	0x2f, r1	; 47
	TCCR1B = 0x03;
  aa:	83 e0       	ldi	r24, 0x03	; 3
  ac:	8e bd       	out	0x2e, r24	; 46
	TIMSK |= (1<<TOIE1);
  ae:	89 b7       	in	r24, 0x39	; 57
  b0:	84 60       	ori	r24, 0x04	; 4
  b2:	89 bf       	out	0x39, r24	; 57
  b4:	ff cf       	rjmp	.-2      	; 0xb4 <main+0x1e>

000000b6 <_exit>:
  b6:	f8 94       	cli

000000b8 <__stop_program>:
  b8:	ff cf       	rjmp	.-2      	; 0xb8 <__stop_program>
