
StepperMotor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000011a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000016e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000016e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001a0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007de  00000000  00000000  000001fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005a9  00000000  00000000  000009da  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000030e  00000000  00000000  00000f83  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001294  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000031e  00000000  00000000  000012b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000254  00000000  00000000  000015d6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  0000182a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 8b 00 	jmp	0x116	; 0x116 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:

int main(void)
{
	int time = 3,i = 0,steps = 128;
	//The ULN driver is connected to PORT D first 4 pins
	DDRD = 0x0F;//o,1,2,3 pins are output
  6c:	8f e0       	ldi	r24, 0x0F	; 15
  6e:	81 bb       	out	0x11, r24	; 17
	PORTD = 0x00;
  70:	12 ba       	out	0x12, r1	; 18
		}
		_delay_ms(1000);
		*/
		
		//Micro Step
		for(i = 0; i < 3;i++)
  72:	80 e0       	ldi	r24, 0x00	; 0
  74:	90 e0       	ldi	r25, 0x00	; 0
  76:	41 c0       	rjmp	.+130    	; 0xfa <main+0x8e>
		{
			PORTD = 0x01;
  78:	21 e0       	ldi	r18, 0x01	; 1
  7a:	22 bb       	out	0x12, r18	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  7c:	ef e6       	ldi	r30, 0x6F	; 111
  7e:	f7 e1       	ldi	r31, 0x17	; 23
  80:	31 97       	sbiw	r30, 0x01	; 1
  82:	f1 f7       	brne	.-4      	; 0x80 <main+0x14>
  84:	00 c0       	rjmp	.+0      	; 0x86 <main+0x1a>
  86:	00 00       	nop
			_delay_ms(time);
			PORTD = 0x03;
  88:	23 e0       	ldi	r18, 0x03	; 3
  8a:	22 bb       	out	0x12, r18	; 18
  8c:	ef e6       	ldi	r30, 0x6F	; 111
  8e:	f7 e1       	ldi	r31, 0x17	; 23
  90:	31 97       	sbiw	r30, 0x01	; 1
  92:	f1 f7       	brne	.-4      	; 0x90 <main+0x24>
  94:	00 c0       	rjmp	.+0      	; 0x96 <main+0x2a>
  96:	00 00       	nop
			_delay_ms(time);
			PORTD = 0x02;
  98:	22 e0       	ldi	r18, 0x02	; 2
  9a:	22 bb       	out	0x12, r18	; 18
  9c:	ef e6       	ldi	r30, 0x6F	; 111
  9e:	f7 e1       	ldi	r31, 0x17	; 23
  a0:	31 97       	sbiw	r30, 0x01	; 1
  a2:	f1 f7       	brne	.-4      	; 0xa0 <main+0x34>
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <main+0x3a>
  a6:	00 00       	nop
			_delay_ms(time);
			PORTD = 0x06;
  a8:	26 e0       	ldi	r18, 0x06	; 6
  aa:	22 bb       	out	0x12, r18	; 18
  ac:	ef e6       	ldi	r30, 0x6F	; 111
  ae:	f7 e1       	ldi	r31, 0x17	; 23
  b0:	31 97       	sbiw	r30, 0x01	; 1
  b2:	f1 f7       	brne	.-4      	; 0xb0 <main+0x44>
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <main+0x4a>
  b6:	00 00       	nop
			_delay_ms(time);
			PORTD = 0x04;
  b8:	24 e0       	ldi	r18, 0x04	; 4
  ba:	22 bb       	out	0x12, r18	; 18
  bc:	ef e6       	ldi	r30, 0x6F	; 111
  be:	f7 e1       	ldi	r31, 0x17	; 23
  c0:	31 97       	sbiw	r30, 0x01	; 1
  c2:	f1 f7       	brne	.-4      	; 0xc0 <main+0x54>
  c4:	00 c0       	rjmp	.+0      	; 0xc6 <main+0x5a>
  c6:	00 00       	nop
			_delay_ms(time);
			PORTD = 0x0C;
  c8:	2c e0       	ldi	r18, 0x0C	; 12
  ca:	22 bb       	out	0x12, r18	; 18
  cc:	ef e6       	ldi	r30, 0x6F	; 111
  ce:	f7 e1       	ldi	r31, 0x17	; 23
  d0:	31 97       	sbiw	r30, 0x01	; 1
  d2:	f1 f7       	brne	.-4      	; 0xd0 <main+0x64>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <main+0x6a>
  d6:	00 00       	nop
			_delay_ms(time);
			PORTD = 0x08;
  d8:	28 e0       	ldi	r18, 0x08	; 8
  da:	22 bb       	out	0x12, r18	; 18
  dc:	ef e6       	ldi	r30, 0x6F	; 111
  de:	f7 e1       	ldi	r31, 0x17	; 23
  e0:	31 97       	sbiw	r30, 0x01	; 1
  e2:	f1 f7       	brne	.-4      	; 0xe0 <main+0x74>
  e4:	00 c0       	rjmp	.+0      	; 0xe6 <main+0x7a>
  e6:	00 00       	nop
			_delay_ms(time);
			PORTD = 0x09;
  e8:	29 e0       	ldi	r18, 0x09	; 9
  ea:	22 bb       	out	0x12, r18	; 18
  ec:	ef e6       	ldi	r30, 0x6F	; 111
  ee:	f7 e1       	ldi	r31, 0x17	; 23
  f0:	31 97       	sbiw	r30, 0x01	; 1
  f2:	f1 f7       	brne	.-4      	; 0xf0 <main+0x84>
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <main+0x8a>
  f6:	00 00       	nop
		}
		_delay_ms(1000);
		*/
		
		//Micro Step
		for(i = 0; i < 3;i++)
  f8:	01 96       	adiw	r24, 0x01	; 1
  fa:	83 30       	cpi	r24, 0x03	; 3
  fc:	91 05       	cpc	r25, r1
  fe:	0c f4       	brge	.+2      	; 0x102 <main+0x96>
 100:	bb cf       	rjmp	.-138    	; 0x78 <main+0xc>
 102:	ff ef       	ldi	r31, 0xFF	; 255
 104:	29 e6       	ldi	r18, 0x69	; 105
 106:	88 e1       	ldi	r24, 0x18	; 24
 108:	f1 50       	subi	r31, 0x01	; 1
 10a:	20 40       	sbci	r18, 0x00	; 0
 10c:	80 40       	sbci	r24, 0x00	; 0
 10e:	e1 f7       	brne	.-8      	; 0x108 <main+0x9c>
 110:	00 c0       	rjmp	.+0      	; 0x112 <main+0xa6>
 112:	00 00       	nop
 114:	ae cf       	rjmp	.-164    	; 0x72 <main+0x6>

00000116 <_exit>:
 116:	f8 94       	cli

00000118 <__stop_program>:
 118:	ff cf       	rjmp	.-2      	; 0x118 <__stop_program>
